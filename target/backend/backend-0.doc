
0:F:\git\nodejs\vue\vuestep\2019422\backend\.postcssrc.js
// https://github.com/michael-ciniawsky/postcss-load-config

module.exports = {
  "plugins": {
    // to edit target browsers: use "browserlist" field in package.json
    "autoprefixer": {}
  }
}

1:F:\git\nodejs\vue\vuestep\2019422\backend\index.html
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no">
  <title>backend</title>
  <link rel="shortcut icon" href="/static/favicon.ico"/>
</head>
<body>
<div id="app"></div>
<!-- built files will be auto injected -->
</body>
</html>

2:F:\git\nodejs\vue\vuestep\2019422\backend\src\App.vue
<template>
  <div id="app">
    <router-view></router-view>
  </div>
</template>

<script>
  export default {}
</script>
<style lang="stylus" rel="stylesheet/stylus">
  @import "./assets/stylus/reset.styl"
</style>


3:F:\git\nodejs\vue\vuestep\2019422\backend\src\assets\js\canvas.js
/**
 * Created by Dull on 2017/5/11 0011.
 */
/**
 * Dots
 */
var Dots = function () {
  // 画布相关
  this.canvas;
  this.ctx;

  // 绘制点相关
  this.x;
  this.y;
  this.r;

  // 移动相关
  this.sx;
  this.sy;
};

Dots.prototype = {
  // 初始化点的方法 x/y为可选参数 为生成点的位置 不传则随机生成
  init: function (canvas, x, y) {
    this.canvas = canvas;
    this.ctx = this.canvas.getContext('2d');

    this.x = x * 2 || Math.random() * this.canvas.width;
    this.y = y * 2 || Math.random() * this.canvas.height;
    this.r = Math.random() * 50; // 随机生成 <50 的半径值

    // 随机确定点的移动速度与方向 速度值在 [-1.5, 1.5) 之间 提高数值可加快速度
    this.sx = Math.random() * 3 - 1.5;
    this.sy = Math.random() * 3 - 1.5;

    this.ctx.beginPath();
    this.ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);
    this.ctx.fillStyle = "rgba(255,255,255,.3)";
    this.ctx.fill();
    this.ctx.closePath();
  },

  // 更新点位置
  update: function () {
    this.x = this.x + this.sx;
    this.y = this.y + this.sy;

    // 点超出canvas范围时另其"重生"
    if (this.x < 0 || this.x > this.canvas.width) {
      this.init(this.canvas);
    }
    if (this.y < 0 || this.y > this.canvas.height) {
      this.init(this.canvas);
    }

    this.ctx.beginPath();
    this.ctx.arc(this.x, this.y, this.r + 0.5, 0, 2 * Math.PI);
    this.ctx.fillStyle = "rgba(255,255,255,.3)";
    this.ctx.fill();
    this.ctx.closePath();
  }

};

/**
 * main
 */
export default function doCanvas() {

  let dotsArr = [],
    dotsNum = 0,
    maxDotsNum = 0,
    overNum = 0, // 超出最大数量的点的数量
    dotsDistance = 250, // 点之间产生连线的最大距离

    //bg = document.getElementById('bg'),
    canvas = document.getElementById('canvas'),
    ctx = canvas.getContext('2d'),

    width = parseInt(document.documentElement.clientWidth),
    height = parseInt(document.documentElement.clientHeight),
    area = width * height, // canvas区域面积
    cssText = 'width: ' + width + 'px; height: ' + height + 'px;';
  // 设置背景和canvas的宽高
  //bg.setAttribute('style', cssText);
  canvas.setAttribute('style', cssText);
  canvas.width = (width * 2).toString();
  canvas.height = (height * 2).toString();

  // 根据canvas面积动态确定初始化点的数量和最大数量
  dotsNum = parseInt(area / 25000);
  maxDotsNum = dotsNum * 2;

  //生成点
  for (let i = 0; i < dotsNum; i++) {
    let dot = new Dots();
    dotsArr.push(dot);
    dot.init(canvas);
  }

  //动画与连线
  let requestAnimFrame = requestAnimationFrame || webkitRequestAnimationFrame || oRequestAnimationFrame || msRequestAnimationFrame;
  requestAnimFrame(animateUpdate); // 兼容不同浏览器的requestAnimationFrame

  function animateUpdate() {
    ctx.clearRect(0, 0, canvas.width, canvas.height); // 清空canvas中原有的内容

    // 更新点的位置 数量超出最大值时舍弃旧的点
    if (dotsNum > maxDotsNum) {
      overNum = dotsNum - maxDotsNum;
    }

    for (let i = overNum; i < dotsNum; i++) {
      dotsArr[i].update();
    }

    // 绘制连线
    for (let i = overNum; i < dotsNum; i++) {
      for (let j = i + 1; j < dotsNum; j++) {
        let tx = dotsArr[i].x - dotsArr[j].x,
          ty = dotsArr[i].y - dotsArr[j].y,
          s = Math.sqrt(Math.pow(tx, 2) + Math.pow(ty, 2));
        if (s < dotsDistance) {
          ctx.beginPath();
          ctx.moveTo(dotsArr[i].x, dotsArr[i].y);
          ctx.lineTo(dotsArr[j].x, dotsArr[j].y);
          ctx.strokeStyle = 'rgba(255,255,255,' + (dotsDistance - s) / dotsDistance + ')';
          ctx.strokeWidth = 1;
          ctx.stroke();
          ctx.closePath();
        }
      }
    }

    requestAnimFrame(animateUpdate);
  }
}

4:F:\git\nodejs\vue\vuestep\2019422\backend\src\assets\js\util.js
/**
 * Created by Dull on 2017/5/3 0003.
 */
export default{
  serverUrl: '',
  api: {},
  authcode:'',
  vue: {},
  setSession(key, value){
    sessionStorage.setItem(key, JSON.stringify(value))
  },
  getSession(key){
    return JSON.parse(sessionStorage.getItem(key))
  },
  removeSession(key){
    sessionStorage.removeItem(key)
  },
  //这是有设定过期时间的使用示例：
  //s20是代表20秒
  //h是指小时，如12小时则是：h12
  //d是天数，30天则：d30
  setCookieAndTime(key, value, time) {
    let strsec = this.getsec(time);
    let exp = new Date();
    exp.setTime(exp.getTime() + strsec * 1);
    document.cookie = key + "=" + encodeURI(value) + ";expires=" + exp.toGMTString() + ";path=/";
  },
  //读取cookies
  getCookie(key) {
    let arr, reg = new RegExp("(^| )" + key + "=([^;]*)(;|$)");
    if (arr = document.cookie.match(reg))
      return decodeURI(arr[2]);
    else
      return null;
  },
  //删除cookies
  delCookie(key) {
    let exp = new Date();
    exp.setTime(exp.getTime() - 1);
    let cval = getCookie(key);
    if (cval)
      document.cookie = key + "=" + cval + ";expires=" + exp.toGMTString() + ";path=/";
  },
  //对时间的解析处理
  getsec(str) {
    let str1 = str.substring(1, str.length) * 1;
    let str2 = str.substring(0, 1);
    if (str2 === "s")
      return str1 * 1000;
    else if (str2 === "h")
      return str1 * 60 * 60 * 1000;
    else if (str2 === "d")
      return str1 * 24 * 60 * 60 * 1000;
  }

}

5:F:\git\nodejs\vue\vuestep\2019422\backend\src\components\common\Layout.vue
<style lang="stylus" rel="stylesheet/stylus">
  .layout
    .left
      position fixed
      top 0
      bottom 0
      left 0
    .right
      position fixed
      top 0
      right 0
      bottom 0
      background-color #f5f7f9
      .layout-header
        position absolute
        width 100%
        height 60px
        background #fff
        box-shadow 0 2px 2px rgba(7, 17, 27, .1)
        .layout-header-title
          position absolute
          height 60px
          line-height 60px
          left 20px
          font-size 20px
          font-weight bold
        .el-dropdown
          position absolute
          right 50px
          .user-info
            cursor pointer
            .avatar
              float left
              margin-top 10px
              margin-right 5px
              display inline-block
              width 40px
              height 40px
              border-radius 50%
              background url("../../assets/img/avatar.jpg") no-repeat center
              background-size 100%
              border 1px solid #ccc
            .name
              display inline-block
              font-size 15px
              font-weight bold
              color #666
              line-height 60px
              height 60px
      .layout-content
        position fixed
        top 60px
        bottom 0
        width 87.5%
        border-radius 4px
        box-sizing border-box
        & > div:first-child
          height calc(100% - 27px)
          .el-breadcrumb
            padding 10px 15px 0
          .main
            margin 15px
            padding 0 10px 15px 10px
            max-height calc(100% - 75px)
            min-height 200px
            background #fff
            overflow auto
            box-shadow 0 2px 2px 0 rgba(7, 17, 27, .1)
            .header
              height 60px
              line-height 60px
            .page
              margin-top 10px
              text-align right
        .layout-copy
          position absolute
          top calc(100% - 27px)
          width 100%
          padding 0 0 15px
          text-align center
          color #9ea7b4
          font-size 12px
</style>

<template>
  <div class="layout">
    <el-row type="flex">
      <el-col :span="3" class="left">
        <my-menu></my-menu>
      </el-col>
      <el-col :span="21" class="right">
        <div class="layout-header">
          <div class="layout-header-title">XXXXXXX管理系统</div>
          <el-dropdown @command="handleCommand">
            <div class="user-info">
              <span class="avatar"></span>
              <span class="name">Dull<i class="el-icon-caret-bottom el-icon--right"></i></span>
            </div>
            <el-dropdown-menu slot="dropdown">
              <el-dropdown-item command="exit">退出</el-dropdown-item>
            </el-dropdown-menu>
          </el-dropdown>
        </div>
        <div class="layout-content">
          <router-view></router-view>
          <div class="layout-copy">
            2015-2017 &copy; Dull
          </div>
        </div>
      </el-col>
    </el-row>
  </div>
</template>

<script>
  import myMenu from 'common/Menu'
  import util from '../../assets/js/util'
  export default {
    data() {
      return {
        options: [{
          value: '选项1',
          label: '黄金糕'
        }, {
          value: '选项2',
          label: '双皮奶'
        }, {
          value: '选项3',
          label: '蚵仔煎'
        }, {
          value: '选项4',
          label: '龙须面'
        }, {
          value: '选项5',
          label: '北京烤鸭'
        }],
        value: ''
      }
    },
    components: {
      myMenu
    },
    methods: {
      handleCommand(command) {
        if (command === 'exit') {
          util.authcode = null
          util.removeSession('authcode')
          this.$router.push('/login')
        }
      }
    }
  }
</script>

6:F:\git\nodejs\vue\vuestep\2019422\backend\src\components\common\Login.vue
<style lang="stylus" rel="stylesheet/stylus">
  .login
    position fixed
    display flex
    top 0
    right 0
    bottom 0
    left 0
    background-color #0099C3
    /*background url("../../assets/img/login-bg.jpg") no-repeat 100% 100%*/
    canvas
      position fixed
    .login-box
      margin auto
      width 420px
      height 300px
      border-radius 10px
      background-color #ffffff
      padding 30px
      .login-box-title
        margin-bottom 30px
        font-size 23px
        font-weight 500
        text-align center
      .el-form
        .el-input__inner
          border-radius 0
        .captcha
          width 100%
          height 36px
    .login-box-button
      margin-top 15px
      width 100%
</style>

<template>
  <div class="login">
    <canvas id="canvas"></canvas>
    <div class="login-box">
      <h2 class="login-box-title">CMS系统</h2>
      <el-form :model="login" :rules="rules" ref="login">
        <el-row type="flex" justify="center">
          <el-col :span="18">
            <el-form-item prop="username">
              <el-input v-model="login.username" size="large" placeholder="用户名/手机/邮箱"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row type="flex" justify="center">
          <el-col :span="18">
            <el-form-item prop="password">
              <el-input v-model="login.password" size="large" placeholder="密码" type="password"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row type="flex" justify="center">
          <el-col :span="12">
            <el-form-item prop="captcha">
              <el-input v-model="login.captcha" placeholder="验证码"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="6">
              <img class="captcha" src="" alt="验证码不见了">
          </el-col>
        </el-row>
      </el-form>
      <el-row type="flex" justify="center">
        <el-col :span="18">
          <el-button class="login-box-button" type="primary" :loading="loading" @click="loginSubmit">
            登录
          </el-button>
        </el-col>
      </el-row>
    </div>
  </div>
</template>

<script>
  import doCanvas from '../../assets/js/canvas'
  import util from '../../assets/js/util'
  export default{
    data(){
      return {
        login: {
          username: '',
          password: '',
          captcha: ''
        },
        rules: {
          username: [
            {required: true, message: '请输入用户名/邮箱', trigger: 'blur'},
            {min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur'}
          ],
          password: [
            {required: true, message: '请输入密码', trigger: 'blur'},
            {min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur'}
          ],
          captcha:[
            {required: true, message: '请输入验证码', trigger: 'blur'},
            {len:4, message: '长度为 4 个字符', trigger: 'blur'}
          ]
        },
        loading: false
      }
    },
    methods: {
      loginSubmit(){
        this.loading = true
//        util.api.post()
        setTimeout(()=>{
          util.authcode='123456'
          util.setSession('authcode',util.authcode)
          this.$router.push('/layout/index')
          this.loading = true
        },1500)
      }
    },
    mounted(){
      doCanvas()
      window.onresize=function () {
        doCanvas()
      }
    }
  }
</script>


7:F:\git\nodejs\vue\vuestep\2019422\backend\src\components\common\Menu.vue
<style lang="stylus" rel="stylesheet/stylus">
  .navbar
    .el-menu
      border-radius 0
      .navbar-logo
        margin 15px auto
        width 90%
        height 30px
        font-weight bold
        font-size 25px
        letter-spacing 3px
        text-align center
        color #ffffff
        line-height 1
        background url("../../assets/img/navbar-logo.png") no-repeat center
        background-size 90% 30px
      .navbar-menu
        position fixed
        top 60px
        bottom 0
        left 0
        background-color #324157
        width 12.5%
        overflow-y auto
        &::-webkit-scrollbar
          width 0
      .fa-icon
        width auto
        height 18px
        margin-right 10px
</style>

<template>
  <div class="navbar">
    <el-menu theme="dark" router unique-opened>
      <div class="navbar-logo"></div>
      <div class="navbar-menu">
        <el-menu-item index="/layout/index"><icon name="dashboard"></icon>首页</el-menu-item>
        <el-submenu index="user">
          <template slot="title">
            <icon name="user"></icon>用户
          </template>
          <el-menu-item index="/layout/user">用户管理</el-menu-item>
          <el-menu-item index="/layout/role">角色管理</el-menu-item>
          <el-menu-item index="/layout/permission">权限管理</el-menu-item>
        </el-submenu>
        <el-menu-item index="3"><i class="el-icon-setting"></i><span class="layout-text">导航三</span></el-menu-item>
        <el-submenu index="1">
          <template slot="title">
            <icon name="dashboard"></icon>导航一
          </template>
          <el-menu-item index="1-1">选项1</el-menu-item>
          <el-menu-item index="1-2">选项2</el-menu-item>
          <el-menu-item index="1-3">选项3</el-menu-item>
          <el-submenu index="1-4">
            <template slot="title">选项4</template>
            <el-menu-item index="1-4-1">选项1</el-menu-item>
          </el-submenu>
        </el-submenu>
        <el-menu-item index="2"><i class="el-icon-menu"></i><span class="layout-text">导航二</span></el-menu-item>
        <el-menu-item index="3"><i class="el-icon-setting"></i><span class="layout-text">导航三</span></el-menu-item>
        <el-submenu index="1">
          <template slot="title">
            <icon name="dashboard"></icon>导航一
          </template>
          <el-menu-item index="1-1">选项1</el-menu-item>
          <el-menu-item index="1-2">选项2</el-menu-item>
          <el-menu-item index="1-3">选项3</el-menu-item>
          <el-submenu index="1-4">
            <template slot="title">选项4</template>
            <el-menu-item index="1-4-1">选项1</el-menu-item>
          </el-submenu>
        </el-submenu>
        <el-menu-item index="2"><i class="el-icon-menu"></i><span class="layout-text">导航二</span></el-menu-item>
        <el-menu-item index="3"><i class="el-icon-setting"></i><span class="layout-text">导航三</span></el-menu-item>
        <el-submenu index="1">
          <template slot="title">
            <icon name="dashboard"></icon>导航一
          </template>
          <el-menu-item index="1-1">选项1</el-menu-item>
          <el-menu-item index="1-2">选项2</el-menu-item>
          <el-menu-item index="1-3">选项3</el-menu-item>
          <el-submenu index="1-4">
            <template slot="title">选项4</template>
            <el-menu-item index="1-4-1">选项1</el-menu-item>
          </el-submenu>
        </el-submenu>
        <el-menu-item index="2"><i class="el-icon-menu"></i><span class="layout-text">导航二</span></el-menu-item>
        <el-menu-item index="3"><i class="el-icon-setting"></i><span class="layout-text">导航三</span></el-menu-item>
      </div>
    </el-menu>
  </div>
</template>

<script>
  export default{

  }
</script>

8:F:\git\nodejs\vue\vuestep\2019422\backend\src\components\page\Index.vue
<style lang="stylus" rel="stylesheet/stylus">

</style>

<template>
  <div class="index">
    <el-breadcrumb>
      <el-breadcrumb-item :to="'/'">首页</el-breadcrumb-item>
      <el-breadcrumb-item>活动管理</el-breadcrumb-item>
      <el-breadcrumb-item>活动列表</el-breadcrumb-item>
      <el-breadcrumb-item>活动详情</el-breadcrumb-item>
    </el-breadcrumb>
    <div class="main">
      <el-form ref="form" :model="form" label-width="80px" style="width: 440px">
        <el-form-item label="活动名称">
          <el-input v-model="form.name"></el-input>
        </el-form-item>
        <el-form-item label="活动区域">
          <el-select v-model="form.region" placeholder="请选择活动区域">
            <el-option label="上海" value="shanghai"></el-option>
            <el-option label="北京" value="beijing"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="活动时间">
          <el-col :span="11">
            <el-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></el-date-picker>
          </el-col>
          <el-col class="line" :span="2">-</el-col>
          <el-col :span="11">
            <el-time-picker type="fixed-time" placeholder="选择时间" v-model="form.date2" style="width: 100%;"></el-time-picker>
          </el-col>
        </el-form-item>
        <el-form-item label="即时配送">
          <el-switch on-text="" off-text="" v-model="form.delivery"></el-switch>
        </el-form-item>
        <el-form-item label="活动性质">
          <el-checkbox-group v-model="form.type">
            <el-checkbox label="美食/餐厅线上活动" name="type"></el-checkbox>
            <el-checkbox label="地推活动" name="type"></el-checkbox>
            <el-checkbox label="线下主题活动" name="type"></el-checkbox>
            <el-checkbox label="单纯品牌曝光" name="type"></el-checkbox>
          </el-checkbox-group>
        </el-form-item>
        <el-form-item label="特殊资源">
          <el-radio-group v-model="form.resource">
            <el-radio label="线上品牌商赞助"></el-radio>
            <el-radio label="线下场地免费"></el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item label="活动形式">
          <el-input type="textarea" v-model="form.desc"></el-input>
        </el-form-item>
        <el-form-item label="活动区域">
          <el-select v-model="form.region" placeholder="请选择活动区域">
            <el-option label="上海" value="shanghai"></el-option>
            <el-option label="北京" value="beijing"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="活动时间">
          <el-col :span="11">
            <el-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></el-date-picker>
          </el-col>
          <el-col class="line" :span="2">-</el-col>
          <el-col :span="11">
            <el-time-picker type="fixed-time" placeholder="选择时间" v-model="form.date2" style="width: 100%;"></el-time-picker>
          </el-col>
        </el-form-item>
        <el-form-item label="即时配送">
          <el-switch on-text="" off-text="" v-model="form.delivery"></el-switch>
        </el-form-item>
        <el-form-item label="活动性质">
          <el-checkbox-group v-model="form.type">
            <el-checkbox label="美食/餐厅线上活动" name="type"></el-checkbox>
            <el-checkbox label="地推活动" name="type"></el-checkbox>
            <el-checkbox label="线下主题活动" name="type"></el-checkbox>
            <el-checkbox label="单纯品牌曝光" name="type"></el-checkbox>
          </el-checkbox-group>
        </el-form-item>
        <el-form-item label="特殊资源">
          <el-radio-group v-model="form.resource">
            <el-radio label="线上品牌商赞助"></el-radio>
            <el-radio label="线下场地免费"></el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item label="活动形式">
          <el-input type="textarea" v-model="form.desc"></el-input>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" @click="onSubmit">立即创建</el-button>
          <el-button>取消</el-button>
        </el-form-item>
      </el-form>
    </div>
  </div>
</template>

<script>
  export default {
    data() {
      return {
        form: {
          name: '',
          region: 'shanghai',
          date1: '',
          date2: '',
          delivery: false,
          type: [],
          resource: '',
          desc: ''
        }
      }
    },
    methods: {
      onSubmit() {
        console.log('submit!');
      }
    }
  }
</script>

9:F:\git\nodejs\vue\vuestep\2019422\backend\src\components\page\Role.vue
<style lang="stylus" rel="stylesheet/stylus">

</style>

<template>
  <div class="user">
    <el-breadcrumb>
      <el-breadcrumb-item :to="'/'">首页</el-breadcrumb-item>
      <el-breadcrumb-item>用户</el-breadcrumb-item>
      <el-breadcrumb-item>用户管理</el-breadcrumb-item>
    </el-breadcrumb>
    <div class="main">
      <el-select v-model="value2" placeholder="请选择">
        <el-option
          v-for="item in options2"
          :key="item.value"
          :label="item.label"
          :value="item.value"
          :disabled="item.disabled">
        </el-option>
      </el-select>
  </div>
  </div>
</template>

<script>
  export default {
    data() {
      return {
        options2: [{
          value: '选项1',
          label: '黄金糕'
        }, {
          value: '选项2',
          label: '双皮奶',
          disabled: true
        }, {
          value: '选项3',
          label: '蚵仔煎'
        }, {
          value: '选项4',
          label: '龙须面'
        }, {
          value: '选项5',
          label: '北京烤鸭'
        }],
        value2: ''
      }
    }
  }
</script>

10:F:\git\nodejs\vue\vuestep\2019422\backend\src\components\page\User.vue
<style lang="stylus" rel="stylesheet/stylus">

</style>

<template>
  <div class="user">
    <el-breadcrumb>
      <el-breadcrumb-item :to="'/'">首页</el-breadcrumb-item>
      <el-breadcrumb-item>用户</el-breadcrumb-item>
      <el-breadcrumb-item>用户管理</el-breadcrumb-item>
    </el-breadcrumb>
    <div class="main">
        dsds
    </div>
  </div>
</template>

<script>
  export default{

  }
</script>

11:F:\git\nodejs\vue\vuestep\2019422\backend\src\main.js
// The Vue build version to load with the `import` command
// (runtime-only or standalone) has been set in webpack.base.conf with an alias.
require('../config')
import Vue from 'vue'
import App from './App'
import router from './router'
import ElementUI from 'element-ui'
import 'element-ui/lib/theme-default/index.css'
import axios from 'axios'
import {Message} from 'element-ui'
import Qs from 'qs'
import 'vue-awesome/icons'
import Icon from 'vue-awesome/components/Icon'
import util from './assets/js/util'

Vue.use(ElementUI)
Vue.component('icon', Icon)
Vue.config.productionTip = false

util.authcode=util.getSession('authcode')?util.getSession('authcode'):util.getCookie('authcode')
util.serverUrl = process.env.NODE_ENV === 'production' ? 'http://dev.edaoe.com' : 'http://localhost'

util.api = axios.create({
  baseURL: util.serverUrl,
  headers: {'Content-Type': 'application/x-www-form-urlencoded'},
  transformRequest: [function (data) {
    if (!data)
      data = {}
    if (!data.hasOwnProperty("username"))
      data.authcode = util.authcode
    data = Qs.stringify(data, {arrayFormat: 'brackets'})
    return data
  }]
})

util.api.interceptors.response.use(response => {
  let data = response.data
  if (!data.isOk) {
    if (data.errno === -2) {
      Message.error('用户信息已过期，请重新登录！')
      util.authcode = null
      vue.$router.push('/login')
    }
  }
  return data
}, function (error) {
  Message.error('服务器连接失败！')
  return Promise.reject(error)
})

router.beforeEach((to, from, next) => {
  if (to.path === '/login') {
    if (util.authcode)
      next('/layout/index')
    else
      next()
  } else {
    if (util.authcode)
      next()
    else
      next('/login')
  }
})

util.vue=new Vue({
  el: '#app',
  router,
  template: '<App/>',
  components: {App}
})

12:F:\git\nodejs\vue\vuestep\2019422\backend\src\router\index.js
import Vue from 'vue'
import Router from 'vue-router'
import Login from 'common/Login'
import Layout from 'common/Layout'
import Index from 'page/Index'
import User from 'page/User'
import Role from 'page/Role'

Vue.use(Router);

export default new Router({
  mode: 'history',
  routes: [
    {path: '/', redirect: '/login'},
    {path: '/login', component: Login},
    {path: '/layout', component: Layout,children:[
      {path: 'index', component: Index},
      {path: 'user', component: User},
      {path: 'role', component: Role},

    ]}
  ]
})

13:F:\git\nodejs\vue\vuestep\2019422\houtai\index.html
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>my-project</title>
    <link rel="shortcut icon" href="./static/favicon.ico">
</head>
<body>
<div id="app"></div>
<!-- built files will be auto injected -->
</body>
</html>

14:F:\git\nodejs\vue\vuestep\2019422\houtai\src\App.vue
<template>
  <div id="app">
    <!-- 头部导航 -->
    <header class="header" :class="{ 'header-fixed' : headerFixed }">
    <el-row>
        <el-col :span="24">
          <el-menu default-active="5" class="el-menu-demo" mode="horizontal" @select="">
            <el-menu-item index="1">高级插件</el-menu-item>
            <el-menu-item index="2">在线商城</el-menu-item>
            <el-menu-item index="3">客户管理</el-menu-item>
            <el-menu-item index="4">系统设置</el-menu-item>
            <el-menu-item index="5">活动发布</el-menu-item>
          </el-menu>
        </el-col>
    </el-row>
    </header>
    <div v-show="headerFixed" style="position: relative;height: 60px;width: 100%;"></div>

    <main>
          <!-- 左侧导航 -->
        <div class="main-left">
          <el-menu default-active="/activePublic" class="el-menu-vertical-demo" :router="true">
            <el-menu-item index="/activePublic" :class="{'isActive': active}">活动发布</el-menu-item>
            <el-menu-item index="/activeManage" :class="{'isActive': !active}">活动管理</el-menu-item>
          </el-menu>
        </div>

          <!-- 右侧主内容区 -->
          <div  class="main-right" >
            <transition name="fade">
              <router-view class="view"></router-view>
            </transition>
          </div>
    </main>
  </div>
</template>

<script>

import Vue from 'vue'
import Element from 'element-ui'
import 'element-ui/lib/theme-default/index.css'
import $ from 'jquery'

Vue.use(Element)

export default {
  name: 'app',
  data: function (){
    return {
      active:true,
      headerFixed : true
    }
  },
  created: function(){
    this.$router.push('/activePublic');
  },
  methods: {

  },
  watch: {
     '$route': function (to,from) {
         if(to.path == '/activePublic'){
             this.active = true ;
         }else if(to.path == '/activeManage'){
             this.active = false ;
         }
     }
  }
}
</script>

<style>

body{margin: 0;}
#app {
  min-width: 1200px;
  margin: 0 auto;
  font-family: "Helvetica Neue","PingFang SC",Arial,sans-serif;
}
/* 头部导航 */
header{z-index: 1000;min-width: 1200px;transition: all 0.5s ease;  border-top: solid 4px #3091F2;  background-color: #fff;  box-shadow: 0 2px 4px 0 rgba(0,0,0,.12),0 0 6px 0 rgba(0,0,0,.04);  }
header.header-fixed{position: fixed;top: 0;left: 0;right: 0;}
header .el-menu-demo{padding-left: 300px!important;}

/* 主内容区 */
main{display: -webkit-box;display: -ms-flexbox;display: flex;  min-height: 800px;  border: solid 40px #E9ECF1;  background-color: #FCFCFC;  }
main .main-left{text-align: center;-webkit-box-flex: 0;-ms-flex: 0 0 200px;flex: 0 0 200px;}
main .main-right{-webkit-box-flex:1;-ms-flex:1;flex:1; background-color: #fff; padding: 50px 70px; }
main .el-menu{background-color: transparent!important;}
/*  */
.router-link{display:inline-block;width:100%;height:100%;text-align:center;color:#475669;text-decoration: none; }
.is-active .router-link{color:#20a0ff; }

/* 单选框 */
  .el-form-item .el-radio+.el-radio {
    margin-left: 30px!important;
  }
  /* 路由切换动效 */
  .fade-enter-active, .fade-leave-active {
    transition: all .5s;
  }
  .fade-enter, .fade-leave-active {
    opacity: 0;
  }

  .list-enter-active, .list-leave-active {
    transition: all 1s;
  }
  .list-enter, .list-leave-active {
    opacity: 0;
    transform: translateY(30px);
  }

/* 导航栏菜单选中效果 */
  .isActive{color: #20a0ff!important;}
   #app main .aside .is-active{color: #475669;}

  /* 卡片 */
  .el-card{overflow: visible!important;}
</style>

15:F:\git\nodejs\vue\vuestep\2019422\houtai\src\components\address.vue
<!-- 地址选择组件 -->
<template>
  <el-form :model="form" class="demo-ruleForm" :rules="rules" ref="form" label-position="top">

  <el-row :gutter="20" class="address">
      <el-col :span="5">
        <el-form-item prop="province">
        <el-select v-model="form.province" placeholder="请输入省" @change="proChange" >
          <el-option
            v-for="item in provinces"
            :key="item.value"
            :value="item.value">
          </el-option>
        </el-select>
        </el-form-item>
      </el-col>

    <el-col :span="5">
      <el-form-item  prop="city">

      <el-select v-model="form.city" placeholder="请输入市" @change="cityChange" >
        <el-option
          v-for="item in citys"
          :key="item.value"
          :value="item.value">
        </el-option>
      </el-select>
      </el-form-item>

    </el-col>

    <el-col :span="12">
      <el-form-item  prop="detail">

      <el-input
        placeholder="请填写详细地址"
        :number="true"
        v-model="form.detail">
      </el-input>
      </el-form-item>

    </el-col>

  </el-row>
</el-form>
</template>
<script>
  import addressData from '../assets/js/addressData.js'
  import store from 'src/store.js'

  function formatData(data){
    var result = [];
    for(var key in data){
      result.push({
        value: key
      })
    }
    return result
  }

  export default {
    name:'address',
    props:['province','city','detail','isAddressTrue'],
    data: function () {
      return {
        rules:{
          province:[{required:true,message:'请选择省份',trigger:'change'}],
          city:[{required:true,message:'请选择城市',trigger:'change'}],
          detail:[{required:true,message:'请填写详细地址',trigger:'change'}]
        },
        form:{
          province: this.province,
          city: this.city,
          detail: this.detail
        },
        provinces: formatData(addressData)
      }
    },
    watch: {
      form: {
        handler:function(){
          store.commit('setRuleForm',this.form);
        },
        deep:true
      },
      ifCheckFrom: function (val,oldVal) {
        if(val){
          this.$refs.form.validate((valid) => {
          }) ;
        }
      }
    },
    computed: {
      citys: function (){
        return formatData(addressData[this.form.province])
      },
      ifCheckFrom: function () {
        return this.isAddressTrue
      }
    },
    methods: {
      proChange: function (val,oldVal) {
        if(oldVal){
          this.form.city='';
          this.form.detail='';
        }
        var data = formatData(addressData[this.form.province]);
        for(var i =0; i<data.length; i++){
          this.$set(this.citys,i,data[i]);
        }
      },
      cityChange: function (val, oldVal) {
        if (oldVal) {
          this.form.detail = '';
        }
      },
    }
  }
</script>
<style>

  .address .el-form-item{margin-bottom: 0!important;margin-right: 0!important;}
</style>

16:F:\git\nodejs\vue\vuestep\2019422\houtai\src\components\Hello.vue
<template>
  <div id="hello">
    <el-button>默认按钮</el-button>
  </div>

</template>

<script>
  import Vue from 'vue'
  import Element from 'element-ui'
  import 'element-ui/lib/theme-default/index.css'

  Vue.use(Element)

export default {
  name: 'hello'
}
</script>


17:F:\git\nodejs\vue\vuestep\2019422\houtai\src\main.js
// The Vue build version to load with the `import` command
// (runtime-only or standalone) has been set in webpack.base.conf with an alias.
import Vue from 'vue'
import App from './App'
import VueRouter from 'vue-router'
import VueResource from 'vue-resource'
import routeConfig from './router-config'

import store from './store.js'

//加载路由中间件
Vue.use(VueRouter)
Vue.use(VueResource)

//定义路由
const router = new VueRouter({
  routes: routeConfig
})

new Vue({
  router,
  store,
  el: "#app",
  render: h => h(App)
})

18:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\404.vue
<template>
  <p>404 NOT FOUNT o(╯□╰)o</p>
</template>


19:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activeManage\detail.vue
<template>
    <div class="detail">
        <h2 style="margin-top:0;">{{ activeTitle }}</h2>
        <el-row :gutter="20">
            <el-col :span="5">发起人: {{ hostPerson }}</el-col>
            <el-col :span="10">发起时间: {{ hostTime }}</el-col>
            <el-col :span="5">浏览数: {{ readNum }}</el-col>
        </el-row>
          <hr>
        <el-row :gutter="20">
          <el-col :span="24">
            <el-tabs @tab-click="routerTo" class="tab">
              <el-tab-pane label="活动详情"></el-tab-pane>
              <el-tab-pane label="报名管理"></el-tab-pane>
              <el-tab-pane label="签到"></el-tab-pane>
              <el-tab-pane label="数据统计"></el-tab-pane>
              <el-tab-pane label="评价管理"></el-tab-pane>
            </el-tabs>
          </el-col>
        </el-row>
      <transition name="fade">
        <router-view></router-view>
      </transition>
    </div>
</template>

<script>

    export default {
        name:'index',
        data: function () {
            return {
              activeTitle:'活动主题',
              hostPerson:'发起人姓名',
              hostTime:'2016年9月14日',
              readNum:'1999'
            }
        },
        methods: {
          routerTo: function (tab,event) {
            this.$router.push('/activeManage/detail/page'+(tab.index+1));
          },
        },
        watch: function () {

        }
    }

</script>

<style>
  .detail .el-tabs__item{padding:0 40px;}
</style>

20:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activeManage\index.vue
<template>
  <div class="allActive">
    <el-row class="head">
      <el-col :span="18" style="padding:20px 0;background: #33CCCC;">
        <el-col :span="8">
          {{ totalActiveNum }}<br>
          <span>活动总数</span>
        </el-col>
        <el-col :span="8">
          {{ totalActiveNum }}<br>
          <span>报名总数</span>
        </el-col>
        <el-col :span="8" style="border: none;">
          {{ auditNum }}<br>
          <span>待审核</span>
        </el-col>
      </el-col>

      <el-col :span="5" :offset="1" style="background:  #3091F2;padding:40px 0;">
        {{ totalActiveNum }}<br>
        <span>查看会员</span>
      </el-col>
    </el-row>

    <el-card class="box-card">
      <h3>活动列表</h3>
      <el-row type="flex" align="middle" :gutter="20" style="padding:20px 0;">
        <el-col :span="5" style="width: 160px;text-align: center;">
          已选择{{ activeNum }}个活动
        </el-col>
        <el-col :span="5" style="width: 140px;">
          <el-select v-model="currentType" placeholder="请选择活动分类">
            <el-option
              v-for="type in types"
              :value="type">
            </el-option>
          </el-select>
        </el-col>
        <el-col :span="13">
          <!--<el-button :plain="true" type="info">设置活动分类</el-button>-->
          <el-button :plain="true" @click.native="handleRemove" type="danger">删除</el-button>
          <el-button :plain="true" @click.native="handleMoveToTop" type="info">置顶</el-button>
          <el-button :plain="true" @click.native="handleCopy" type="info">复制</el-button>
        </el-col>
      </el-row>

      <el-table :data="filteredTableData"  style="width: 100%"
                @cell-click="handleSelect" @selection-change="selectionchange"
                >
        <el-table-column type="selection" width="50"></el-table-column>
        <el-table-column property="title" label="活动名称"></el-table-column>
        <el-table-column property="type" label="活动分类" ></el-table-column>
        <el-table-column property="status" label="活动状态"></el-table-column>
        <el-table-column property="readNum" label="浏览数"></el-table-column>
        <el-table-column property="signUpNum" label="报名数"></el-table-column>
        <el-table-column property="auditNum" label="待审核"></el-table-column>
        <el-table-column inline-template label="操作" align="center" property="id">
          <el-button type="text" size="mini" @click.native="">查看详情</el-button>
        </el-table-column>
      </el-table>

      <el-row type="flex" justify="end" style="padding:20px 0; ">
        <el-pagination
          :current-page="5"
          :page-sizes="[100, 200, 300, 400]"
          :page-size="100"
          layout="sizes, prev, pager, next"
          :total="1000">
        </el-pagination>
      </el-row>
    </el-card>


  </div>
</template>
<script>
  export default {
    name: 'allActive',
    data: function () {
      return {
        totalActiveNum: 3,
        totalSignUp: 204,
        auditNum: 15,
        activeNum: 0,
        currentType: '全部',
        selectItems:[],
        types: ['全部','测试活动','免费活动','收费活动'],
        tableData: [
          {
            id: '001',
            title: '王小虎',
            type: '测试活动',
            status: '已结束',
            readNum: 200,
            signUpNum: 100,
            auditNum: 100
          }, {
            id: '002',
            title: '王小虎',
            type: '测试活动',
            status: '已结束',
            readNum: 200,
            signUpNum: 100,
            auditNum: 100
          }, {
            id: '003',
            title: '王小虎',
            type: '测试活动',
            status: '已结束',
            readNum: 200,
            signUpNum: 100,
            auditNum: 100
          }, {
            id: '004',
            title: '王小虎',
            type: '测试活动',
            status: '已结束',
            readNum: 200,
            signUpNum: 100,
            auditNum: 100
          }],
      }
    },
    computed:{
        filteredTableData: function () {
          var type = this.currentType;
          return this.tableData.filter(function (data) {
            if(type == '全部'|| type == '' ){
              return true
            }else{
              return data.type == type
            }
          })
        }
    },
    methods: {
      handleSelect: function (row, column, cell, event) {
       if (column.label == '操作') {
         this.$router.push('/activeManage/detail/page1');
        } else if(column.type == 'selection'){
            row.$info = !row.$selected;
       }else{
            row.$selected = !row.$selected;
            row.$info = row.$selected;
       }
      },
      selectionchange: function (val) {
        var arr = [];
        val.forEach(function (item) {
            arr.push(item.id);
        });
        this.selectItems = arr;
        this.activeNum = this.selectItems.length;
      },
      handleRemove:function(){
        var tableData = this.tableData;
        this.selectItems.forEach(function (id) {
          tableData.forEach(function (data) {
              if(id == data.id){
                tableData.splice(tableData.indexOf(data),1)
              }
          })
        });
        this.selectItems = [];
      },
    }
  }
</script>
<style>
  .allActive > .head > .el-col > .el-col {
    padding: 20px 0;
    border-right: solid 1px #fff;
  }

  .allActive .head {
    text-align: center;
    color: #fff;
    font-size: 30px;
    margin-bottom: 50px;
  }

  .allActive .head span {
    font-size: 16px;
  }
</style>

21:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activeManage\page1.vue
<template>
    <div class="page1">
        <p style="color: #999;font-size: 14px;">活动详情的按照内容板块可分别编辑，活动结束后不可编辑。</p>
        <el-tabs type="card" @tab-click="routerTo">
          <el-tab-pane label="活动信息"></el-tab-pane>
          <el-tab-pane label="报名签到"></el-tab-pane>
          <el-tab-pane label="分享设置"></el-tab-pane>
          <el-tab-pane label="个性化设置"></el-tab-pane>
        </el-tabs>
      <transition name="fade">
        <router-view></router-view>
      </transition>
      <div class="btn-group">
        <el-button @click.native.prevent="handleCancel">取消</el-button>
        <el-button @click.native.prevent="handleSave" type="primary">保存</el-button>
      </div>
    </div>
</template>
<script>

  export default {

    data: function () {
      return {

      }
    },
    methods: {
      routerTo: function (val) {
        this.$router.push('/activeManage/detail/page1/step'+val);
      },
      handleCancel: function () {

      },
      handleSave: function () {

      }

    },
    watch: {

    },
    created: function () {

    }
  }

</script>

<style>
  .page1 .btn-group{margin: 10px 0;}
   .btn-group button{margin-right: 10px;padding: 10px 25px;}
</style>

22:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activeManage\page2.vue
<template>
  <div class="page2">
    <el-card class="box-card">
      <el-row :gutter="20" align="middle" type="flex" justify="end" style="margin-bottom: 20px;">
        <el-col :span="3">
          报名列表
        </el-col>
        <el-col :span="21" >
          <el-input placeholder="请输入手机号或者姓名" size="large" v-model="searchText"></el-input>
        </el-col>
      </el-row>


      <el-row :gutter="20" align="middle" type="flex" style="padding: 20px;">
        <el-col style="width: 170px;">已选择{{ selectNum }} 个报名用户</el-col>
        <el-col style="width: 400px;" class="btn-group">
          <el-button>通过</el-button>
          <el-button>拒绝</el-button>
          <el-button>退款</el-button>
        </el-col>
        <el-col style="width:400px;">
            <el-button>导入excel</el-button>
            <el-button>导出excel</el-button>
            <el-button>群发信息</el-button>
        </el-col>
      </el-row>

      <el-tabs type="card"  @tab-click="tabClick">
        <el-tab-pane name="全部" label="全部"></el-tab-pane>
        <el-tab-pane name="待支付" label="待支付"></el-tab-pane>
        <el-tab-pane name="待审核" label="待审核"></el-tab-pane>
        <el-tab-pane name="退款中" label="退款中"></el-tab-pane>
        <el-tab-pane name="已成功报名" label="已成功报名"></el-tab-pane>
        <el-tab-pane name="已关闭报名" label="已关闭报名"></el-tab-pane>
      </el-tabs>

      <el-table :data="tableData"
                @selection-change="selectionchange"
                @cell-click="handleSelect"
                >
        <el-table-column type="selection" width="50"></el-table-column>
        <el-table-column property="name" label="姓名" width="80"></el-table-column>
        <el-table-column property="tel" label="手机号" width="130"></el-table-column>
        <el-table-column property="way" label="报名渠道" width="100"></el-table-column>
        <el-table-column property="status" label="交易状态" width="130"></el-table-column>
        <el-table-column property="note" label="备注" width="100" show-tooltip-when-overflow></el-table-column>
      </el-table>


      <el-row type="flex" align="middle" justify="end" style="padding: 20px 0;">
        <el-pagination
          @size-change=""
          @current-change=""
          :current-page="1"
          :page-sizes="[100, 200, 300, 400]"
          :page-size="100"
          layout="sizes, prev, pager, next"
          :total="totalItemsNum">
        </el-pagination>
      </el-row>
    </el-card>

  </div>
</template>

<script>
  /* 测试数据 */
const testData = [
  {
    name: 'Allen',
    tel: '18825144569',
    way: '祖传链接',
    status: '待支付',
    note: '喳喳'
  }, {
    name: 'Allen',
    tel: '13480278079',
    way: '祖传链接',
    status: '已关闭报名',
    note: '喳喳'
  }, {
    name: 'Allen',
    tel: '18825188888',
    way: '祖传链接',
    status: '已成功报名',
    note: '喳喳'
  }, {
    name: 'Allen',
    tel: '17070897917',
    way: '祖传链接',
    status: '退款中',
    note: '喳喳'
  }, {
    name: 'Allen',
    tel: '12414389677',
    way: '祖传链接',
    status: '待审核',
    note: '喳喳'
  }
];

  import debounce from 'lodash.debounce'
  export default {
    name: 'page2',
    data: function () {
      return {
        status:'全部',
        selectNum: 0,
        totalItemsNum:1000,
        searchText: '',
        sourceDate:[],
        tableData:[],
        multipleSelection: []
      }
    },
    computed:{

    },
    methods: {
      handleSelect: function (row, column, cell, event) {
        if (column.label == '操作') {
          this.$router.push('/activeManage/detail/page1');
        } else if (column.type == 'selection') {
          row.$info = !row.$selected;
        } else {
          row.$selected = !row.$selected;
          row.$info = row.$selected;
        }
      },
      selectionchange: function (val) {
        var arr = [];
        val.forEach(function (item) {
          arr.push(item.id);
        });
        this.selectItems = arr;
        this.selectNum = this.selectItems.length;
      },
      filterBySearchText: function (val,data) {
        return data.filter(function (item) {
          return item.name.toLowerCase().match(val.toLowerCase()) || item.tel.match(val)
        })
      },
      filterByStatus: function (status,data) {
        return data.filter(function (item) {
          return (status=="全部") ? true : (item.status == status);
        })
      },
      filterByVal: function () {
        var data = this.filterByStatus(this.status,testData);
        this.tableData = this.searchText ? this.filterBySearchText(this.searchText,data):data;
      },
      tabClick: function (status) {
        this.status = status;
        this.filterByVal();
      }
    },
    watch: {
      searchText: debounce(function (val, oldVal) {
        this.filterByVal();
      }, 500)
    },
    created: function () {
      this.tableData = testData ;
    }
  }

</script>

<style>
  .page2{min-width: 1200px;}
</style>

23:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activeManage\page3.vue
<template>
  <div class="page3">
    <el-card class="box-card">
      <el-row :gutter="20" align="middle" type="flex" justify="end" style="margin-bottom: 20px;">
        <el-col :span="3">
          签到列表
        </el-col>
        <el-col :span="21" >
          <el-input placeholder="请输入手机号或者姓名" size="large" v-model="searchText"></el-input>
        </el-col>
      </el-row>


      <el-row :gutter="20" align="middle" type="flex">
        <el-col :span="10" >
          <el-input placeholder="请输入位序列号或手机号" size="large" v-model="signInInput"></el-input>
        </el-col>
        <el-col :span="4">
          <el-button type="primary"  size="large" @click.native="signIn">签到</el-button>
        </el-col>
        <el-col :span="10" stlyle="min-width:200px;">
          <el-button>导入excel</el-button>
          <el-button>导出excel</el-button>
        </el-col>
      </el-row>

      <el-tabs type="card" @tab-click="tabClick" >
        <el-tab-pane name="全部"   label="全部"></el-tab-pane>
        <el-tab-pane name="已签到" label="已签到"></el-tab-pane>
        <el-tab-pane name="未签到" label="未签到"></el-tab-pane>
      </el-tabs>

      <el-table :data="tableData">
        <el-table-column property="name"    label="姓名"     width="80"></el-table-column>
        <el-table-column property="tel"     label="手机号"   width="130"></el-table-column>
        <el-table-column property="way"     label="报名渠道" width="100"></el-table-column>
        <el-table-column property="status"  label="状态"      width="100"></el-table-column>
        <el-table-column property="note"    label="备注"      width="100" show-tooltip-when-overflow></el-table-column>
        <el-table-column inline-template fixed="right" label="操作" width="80">
          <el-button type="text" size="mini" style="padding: 0;text-align: center;">{{ row.status == "已签到"?"取消签到":"签到" }}</el-button>
        </el-table-column>
      </el-table>


      <el-row  type="flex" align="middle" justify="end" style="padding: 20px 0;">
        <el-pagination
          @size-change=""
          @current-change=""
          :current-page="1"
          :page-sizes="[100, 200, 300, 400]"
          :page-size="100"
          layout="sizes, prev, pager, next"
          :total="totalItemsNum">
        </el-pagination>
      </el-row>
    </el-card>

  </div>
</template>

<script>
  import debounce from 'lodash.debounce'

  /* 测试数据 */
  const testData = [
    {
      name: 'Allen',
      tel: '18825144569',
      way: '祖传链接',
      status: '已签到',
      note: '喳喳'
    }, {
      name: 'Allen',
      tel: '13480278079',
      way: '祖传链接',
      status: '已签到',
      note: '喳喳'
    }, {
      name: 'Allen',
      tel: '18825188888',
      way: '祖传链接',
      status: '已签到',
      note: '喳喳'
    }, {
      name: 'Allen',
      tel: '17070897917',
      way: '祖传链接',
      status: '未签到',
      note: '喳喳'
    }, {
      name: 'Allen',
      tel: '12414389677',
      way: '祖传链接',
      status: '未签到',
      note: '喳喳'
    }
  ];
  export default {
    name:'page3',
    data: function () {
      return {
        searchText:'',
        signInInput:'',
        status:'全部',
        totalItemsNum:1000,
        tableData: '',
      }
    },
    methods: {
      filterBySearchText: function (val,data) {
        return data.filter(function (item) {
          return item.name.toLowerCase().match(val.toLowerCase()) || item.tel.match(val)
        })
      },
      filterByStatus: function (status,data) {
        return data.filter(function (item) {
          return (status=="全部") ? true : (item.status == status);
        })
      },
      filterByVal: function () {
        var data = this.filterByStatus(this.status,testData);
        this.tableData = this.searchText ? this.filterBySearchText(this.searchText,data):data;
      },
      tabClick: function (status) {
        this.status = status;
        this.filterByVal();
      },
      signIn: function () {
        console.log("签到");
      }
    },
    watch: {
      searchText: debounce(function (val, oldVal) {
        this.filterByVal();
      }, 500)
    },
    created: function () {
      this.tableData = testData ;
    }

  }


</script>

<style>
  .page3 .el-row{margin-bottom: 20px;}

</style>

24:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activeManage\page4.vue
<template>
  <div class="page4">
    <p style="font-size: 15px;">数据统计时间: 活动发布时间 {{ activePublishTime }} ——至今</p>
    <el-row type="flex" align="middle" class="title">
        <el-col :span="3" style="width: 85px;">
            <h4>数据总览</h4>
        </el-col>
        <el-col :span="20">
            <el-button type="text">数据指标说明</el-button>
        </el-col>
    </el-row>

    <el-row type="flex" justify="start" class="row" style="margin-bottom: 20px;">
      <el-col :span="3">
        <div class="square">
          {{ readNum }}
          <p>浏览次数</p>
        </div>
      </el-col>
      <el-col :span="3">
        <div class="square">
          {{ readPersonNum }}
          <p>浏览用户数</p>
        </div>
      </el-col>
      <el-col :span="3">
        <div class="square">
          {{ signUpNum }}
          <p>报名人数</p>
        </div>
      </el-col>
      <el-col :span="3">
        <div class="square">
          {{ translateRate }}
          <p>报名转化率</p>
        </div>
      </el-col>
      <el-col :span="3">
        <div class="square">
          {{ signInNum }}
          <p>签到人数</p>
        </div>
      </el-col>
    </el-row>

    <el-row type="flex" align="middle" class="title">
      <el-col :span="24">
        <h4>数据趋势</h4>
      </el-col>
    </el-row>

    <!-- 折现图 -->
        <div id="ployline" style="width: 100%;height: 400px;"></div>

    <el-row type="flex" align="middle" class="title">
      <el-col :span="24">
        <h4>渠道监控</h4>
      </el-col>
    </el-row>
    <!-- 柱状图 -->
    <div id="columnChart" style="width: 100%;height: 400px;"></div>

    <el-row type="flex" align="middle" class="title">
      <el-col :span="24">
        <h4>渠道监控详情</h4>
      </el-col>
    </el-row>

    <el-row>
      <el-table :data="tableData" border style="width: 100%">
        <el-table-column property="way" label="渠道" width="180"></el-table-column>
        <el-table-column property="readNum" label="浏览用户数" width="180" sortable></el-table-column>
        <el-table-column property="forwardNum" label="转发次数" sortable></el-table-column>
        <el-table-column property="signUpNum" label="报名人数" sortable></el-table-column>
      </el-table>
    </el-row>
    <el-row type="flex" align="middle" justify="end" style="padding: 20px 0;">
      <el-pagination @size-change="" @current-change="" :current-page="1" :page-sizes="[100, 200, 300, 400]" :page-size="100" layout="sizes, prev, pager, next" :total="1000">
      </el-pagination>
    </el-row>

    <el-row type="flex" align="middle" class="title">
      <el-col :span="24">
        <h4>用户影响力监控</h4>
      </el-col>
    </el-row>

    <el-row>
      <el-table :data="tableData1" border style="width: 100%">

        <el-table-column property="name" label="姓名"></el-table-column>
        <el-table-column property="tel" label="手机"></el-table-column>
        <el-table-column property="way" label="渠道"></el-table-column>
        <el-table-column property="forwardNum" label="转发次数" sortable></el-table-column>
        <el-table-column property="readNum" label="浏览用户数" sortable></el-table-column>
        <el-table-column property="signUpNum" label="报名人数" sortable></el-table-column>
      </el-table>
    </el-row>
    <el-row type="flex" align="middle" justify="end" style="padding: 20px 0;">
      <el-pagination @size-change="" @current-change="" :current-page="1" :page-sizes="[100, 200, 300, 400]" :page-size="100" layout="sizes, prev, pager, next" :total="1000">
      </el-pagination>
    </el-row>



  </div>
</template>

<script>

  //  TODO:引入图表组件，cnpm引入有点问题
  //import echarts from 'echarts'

  export default {
    name: 'page4',
    data: function () {
      return {
        activePublishTime: '2016-09-12',
        readNum: 1000,
        readPersonNum: 300,
        signUpNum: 100,
        translateRate: '10%',
        signInNum: 88,
        tableData: [
          {
            way: '渠道一',
            readNum: 1500,
            forwardNum: 5000,
            signUpNum: 88
          }, {
            way: '渠道二',
            readNum: 2500,
            forwardNum: 4000,
            signUpNum: 99
          },
          {
            way: '渠道三',
            readNum: 3500,
            forwardNum: 3000,
            signUpNum: 23
          },
          {
            way: '渠道四',
            readNum: 4500,
            forwardNum: 2000,
            signUpNum: 55
          },
          {
            way: '渠道五',
            readNum: 5500,
            forwardNum: 1000,
            signUpNum: 123
          } ],
        tableData1: [
          {
            name: 'Aleen',
            tel: '18825144569',
            way: '渠道一',
            forwardNum: 1000,
            readNum: 800,
            signUpNum: 88
          }, {
            name: 'Aleen',
            tel: '18825144569',
            way: '渠道一',
            forwardNum: 1000,
            readNum: 800,
            signUpNum: 88
          }, {
            name: 'Aleen',
            tel: '18825144569',
            way: '渠道一',
            forwardNum: 1000,
            readNum: 800,
            signUpNum: 88
          }, {
            name: 'Aleen',
            tel: '18825144569',
            way: '渠道一',
            forwardNum: 1000,
            readNum: 800,
            signUpNum: 88
          }, {
            name: 'Aleen',
            tel: '18825144569',
            way: '渠道一',
            forwardNum: 1000,
            readNum: 800,
            signUpNum: 88
          } ],
        ploylineOption: {
          color: [ '#14CC76', '#3091F2', '#6F57FD' ],
          tooltip: {
            trigger: 'axis'
          },
          legend: {

            data: [ '浏览次数', '浏览用户数', '报名人数' ]
          },
          grid: {
            left: '3%',
            right: '4%',
            bottom: '3%',
            containLabel: true
          },
          toolbox: {
            feature: {
              saveAsImage: {}
            }
          },
          xAxis: {
            type: 'category',
            boundaryGap: false,
            data: [ '9-13', '9-14', '9-15', '9-16', '9-17', '9-18', '9-19' ]
          },
          yAxis: {
            type: 'value'
          },
          series: [
            {
              name: '浏览次数',
              type: 'line',
              stack: '总量',
              data: [ 120, 132, 101, 134, 90, 230, 210 ]
            },
            {
              name: '浏览用户数',
              type: 'line',
              stack: '总量',
              data: [ 220, 182, 191, 234, 290, 330, 310 ]
            },
            {
              name: '报名人数',
              type: 'line',
              stack: '总量',
              data: [ 150, 232, 201, 154, 190, 330, 410 ]
            }
          ]
        },
        columnChartOption: {
          color: [ '#14CC76', '#3091F2', '#6F57FD' ],
          tooltip: {
            trigger: 'axis'
          },
          legend: {
            data: [ '浏览次数', '浏览用户数', '报名人数' ]
          },
          calculable: true,
          xAxis: [
            {
              type: 'category',
              data: [ '渠道一', '渠道二', '渠道三', '渠道四' ],
              boundaryGap: [ '20%', '20%' ]
            }
          ],
          yAxis: [
            {
              type: 'value',
              boundaryGap: [ '20%', '20%' ]
            }
          ],
          series: [
            {
              name: '浏览次数',
              type: 'bar',
              stack: '1',
              data: [ 320, 332, 301, 334 ],
              label: {
                normal: {
                  show: true,
                  position: 'top',
                  textStyle: {
                    color: '#333',
                    fontSize: 16
                  }
                }
              }
            },
            {
              name: '浏览用户数',
              type: 'bar',
              stack: '2',
              data: [ 120, 132, 101, 134 ],
              label: {
                normal: {
                  show: true,
                  position: 'top',
                  textStyle: {
                    color: '#333',
                    fontSize: 16
                  }
                }
              }
            },
            {
              name: '报名人数',
              type: 'bar',
              stack: '3',
              data: [ 220, 182, 191, 234 ],
              label: {
                normal: {
                  show: true,
                  position: 'top',
                  textStyle: {
                    color: '#333',
                    fontSize: 16
                  }
                }
              }
            }
          ]
        }
      }
    },
    computed: {
      currentTime: function () {
        var date = new Date();
        var y = date.getFullYear();
        var m = date.getMonth() + 1;
        var d = date.getDate();
        var h = date.getHours();
        var mm = date.getMinutes();
        return y + '-' + m + '-' + d + ' ' + h + ':' + mm;
      }
    },

    methods: {
      initChart: function () {
        var _this = this;
        setTimeout( function () {
          var ployline = echarts.init( document.getElementById( 'ployline' ) );
          var columnChart = echarts.init( document.getElementById( 'columnChart' ) );
          ployline.setOption( _this.ploylineOption );
          columnChart.setOption( _this.columnChartOption );
        }, 1000 )
      }
    },
    watch: {},
    created: function () {
//    this.initChart();
    }
  }


</script>

<style>

  .page4 .square{ width: 140px; height: 140px; border: solid 1px #20a0ff; text-align: center; border-radius: 6px; padding: 40px 0; box-sizing: border-box; }
  .page4 .square p{ color: #999; }
  .page4 .row .el-col{ width: 140px; margin-right: 20px; }
  .page4 .title{ margin-top: 38px; margin-bottom: 15px; }
  .page4 .title h4{ margin: 0; border-left: solid 3px #20a0ff; padding-left: 15px; }
</style>

25:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activeManage\page5.vue
<template>
  <div class="page5">
    <el-card class="box-card">
      <el-row :gutter="20" align="middle" type="flex" justify="end" style="margin-bottom: 20px;">
        <el-col :span="3">
          评价列表
        </el-col>
        <el-col :span="15" :offset="3">
          <el-input placeholder="请输入手机号或者姓名" size="large" v-model="searchText"></el-input>
        </el-col>
        <el-col :span="3">
          <el-button size="large" icon="search">搜索</el-button>
        </el-col>
      </el-row>

      <el-row :gutter="20" align="middle" type="flex" style="padding: 20px;">
        <el-col :span="6" style="width: 160px;">已选择{{ selectNum }} 个报名用户</el-col>
        <el-col :span="18" style="width: 400px;" class="btn-group">
          <el-button>通过</el-button>
          <el-button>拒绝</el-button>
          <el-button>取消审核</el-button>
        </el-col>
      </el-row>

      <el-tabs type="card" @tab-click="tabClick">
        <el-tab-pane name="全部" label="全部"></el-tab-pane>
        <el-tab-pane name="未审核" label="未审核"></el-tab-pane>
        <el-tab-pane name="审核通过" label="审核通过"></el-tab-pane>
        <el-tab-pane name="审核不通过" label="审核不通过"></el-tab-pane>
      </el-tabs>

      <el-row>
        <el-table :data="tableData"
                  @selection-change="selectionchange"
                  @cell-click="handleSelect"
                >
          <el-table-column type="selection" ></el-table-column>
          <el-table-column property="name"      label="姓名"      width="80" ></el-table-column>
          <el-table-column property="tel"       label="手机号"    width="130" ></el-table-column>
          <el-table-column property="evaluate"  label="评价内容" width="200" show-tooltip-when-overflow></el-table-column>
          <el-table-column property="status"    label="状态"      width="120"></el-table-column>
          <el-table-column property="note"      label="备注" width="150"></el-table-column>
        </el-table>
      </el-row>


      <el-row  type="flex" align="middle" justify="end" style="padding: 20px 0;">
          <el-pagination
            @size-change=""
            @current-change=""
            :current-page="1"
            :page-sizes="[100, 200, 300, 400]"
            :page-size="100"
            layout="sizes, prev, pager, next"
            :total="totalItemsNum">
          </el-pagination>
      </el-row>
    </el-card>

  </div>
</template>

<script>
  import debounce from 'lodash.debounce'

  const testData =  [
    {
      name: 'Allen',
      tel: '18825144569',
      evaluate: '祖传链接好啊',
      status: '审核不通过',
      note:'喳喳'
    },{
      name: '蝈蝈',
      tel: '13825144569',
      evaluate: '祖传链接好啊',
      status: '审核通过',
      note:'喳喳'
    },{
      name: '哎呀',
      tel: '17025144569',
      evaluate: '祖传链接好啊',
      status: '未审核',
      note:'喳喳'
    },{
      name: 'Allen',
      tel: '15925144569',
      evaluate: '祖传链接好啊',
      status: '未审核',
      note:'喳喳'
    },{
      name: '大伦',
      tel: '13625144569',
      evaluate: '祖传链接好啊',
      status: '未审核',
      note:'喳喳'
    }];
  export default {
    name: 'page5',
    data: function () {
      return {
        status:'全部',
        searchText:'',
        selectNum:0,
        totalItemsNum:1000,
        tableData:[],
        multipleSelection: []

      }
    },
    methods: {
      handleSelect: function (row, column, cell, event) {
        if (column.label == '操作') {
          this.$router.push('/activeManage/detail/page1');
        } else if (column.type == 'selection') {
          row.$info = !row.$selected;
        } else {
          row.$selected = !row.$selected;
          row.$info = row.$selected;
        }
      },
      selectionchange: function (val) {
        var arr = [];
        val.forEach(function (item) {
          arr.push(item.id);
        });
        this.selectItems = arr;
        this.selectNum = this.selectItems.length;
      },
      filterBySearchText: function (val,data) {
        return data.filter(function (item) {
          return item.name.toLowerCase().match(val.toLowerCase()) || item.tel.match(val)
        })
      },
      filterByStatus: function (status,data) {
        return data.filter(function (item) {
          return (status=="全部") ? true : (item.status == status);
        })
      },
      filterByVal: function () {
        var data = this.filterByStatus(this.status,testData);
        this.tableData = this.searchText ? this.filterBySearchText(this.searchText,data):data;
      },
      tabClick: function (status) {
        this.status = status;
        this.filterByVal();
      }
    },
    watch: {
      searchText: debounce(function (val, oldVal) {
        this.filterByVal();
      }, 500)
    },
    created: function () {
      this.tableData = testData ;
    }
  }

</script>

<style>

</style>

26:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activeManage\totalpages.vue
<template>
    <div>
        <router-view></router-view>
    </div>
</template>

27:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activePublic\index.vue
<template>
    <div class="activePublic ">
      <el-steps :space="200" :active="step" class="step">
        <el-step title="活动信息" description=""></el-step>
        <el-step title="报名签到" description=""></el-step>
        <el-step title="分享设置" description=""></el-step>
        <el-step title="个性设置" description=""></el-step>
      </el-steps>

      <transition name="fade">
        <router-view class="view"></router-view>
      </transition>

        <div class="but-group">
          <el-button @click.native.prevent="handlePreview" v-show="preview">预览</el-button>
          <el-button @click.native.prevent="handlePreStep" v-show="preStep">上一步</el-button>
          <el-button @click.native.prevent="handleNextStep" v-show="nextStep" type="primary">下一步</el-button>
          <el-button @click.native.prevent="handlePublish" v-show="publish" type="primary">发布活动</el-button>
        </div>
    </div>
</template>

  <script>
    import store from 'src/store.js'
    import $ from 'jquery'

    export default {
    name:'activePublic',
    data: function () {
      return {
        isRouter: false,
        preview: true,
        preStep: false,
        nextStep: true,
        publish: false,
        step: 1
      }
    },
    methods: {
      handlePreview: function () {
        console.log('预览');
      },
      handlePreStep: function () {
            this.$router.go(-1);
            this.step--;
            this.goStep(this.step);
          $('html,body').animate({scrollTop:0},500);
      },
      handleNextStep: function () {
          this.$router.push('/activePublic/step'+(this.step+1));
          var _this = this;
          setTimeout(function () {
              if(_this.isRouter){
                  _this.step++;
                  _this.goStep(_this.step);
              }
          })
        $('html,body').animate({scrollTop:0},500);

      },
      handlePublish: function () {
        console.log('发布');
      },
      goStep: function (n) {
        switch (n) {
          case 1 :
            this.preview = true;this.preStep = false;this.nextStep = true;this.publish = false;
            break;
          case 2 :
            this.preview = false;this.preStep = true;this.nextStep = true;this.publish = false;
            break;
          case 3 :
            this.preview = false;this.preStep = true;this.nextStep = true;this.publish = false;
            break;
          case 4 :
            this.preview = false;this.preStep = true;this.nextStep = false;this.publish = true;
            break;
        }
      }
    },
    watch:{
        '$route': function (to,from) {
            this.isRouter = true;
        }
    }
  }

</script>
<style>
 .activePublic .router-link{color:#fff;}
 .activePublic .but-group .el-button{margin-right: 20px;}
</style>

28:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activePublic\step1.vue
<template>
    <div class="step1">
	   <!-- element表单组件 -->
      <el-form :model="ruleForm" class="demo-ruleForm" :rules="rules" ref="ruleForm" label-position="top">
         <!-- 表单项，prop属性表示要进行表单验证，验证规则对应为rules的属性name -->
	     <el-form-item label="活动名称" prop="name">
            <el-input v-model="ruleForm.name" size="large"></el-input>
        </el-form-item>

        <el-form-item label="" prop="fenLei">
	       <!-- 改装后的表单项，在标签栏添加了一个按钮 -->
          <el-row style="height: 35px;" type="flex" align="middle">
            <el-col :span="3" style="width: 90px;">
              <div class="el-form-item__label" style="padding-bottom: 0;"> 活动分类</div>
            </el-col>
            <el-col  class="" :span="2">
              <el-button type="text" @click.native="dialogFormFenLeiVisible = true" style="margin: 0;padding: 0;">设置</el-button>
            </el-col>
          </el-row>
          <el-radio-group v-model="ruleForm.fenLei" >
            <el-radio v-for="item of ruleForm.fenLeis" :label="item.name"></el-radio>
          </el-radio-group>
        </el-form-item>

	      <!-- 这里有一个坑，活动标签并不是一个表单元素，无法使用element自带的验证功能 -->
        <el-form-item label="活动标签" required>
            <el-tag
              v-for="tag in ruleForm.tags"
              :closable="true"
              type="primary"
              @close="handleClose(tag)"
               >
              {{tag.name}}
            </el-tag>
          <el-button icon="plus" size="large" @click.native="showDialog" style="vertical-align: middle;margin: 10px;"></el-button>
          <transition name="fade">
            <div class="el-form-item__error" v-show="tagsValid">{{ tagsError }}</div>
          </transition>
        </el-form-item>

        <el-form-item label="活动时间" required style="width: 750px;">
          <el-col :span="5">
	        <!-- 时间选择器，表单验证时也有点坑，报错异常，建议不用element自带表单验证，自己写验证规则 -->
            <el-form-item prop="activeStartTimeDate">

              <el-date-picker
                v-model="ruleForm.activeStartTimeDate"
                type="date"
                placeholder="活动开始日期">
              </el-date-picker>
            </el-form-item>
          </el-col>

          <el-col :span="5">
            <el-form-item prop="activeStartTimeTime">
              <el-time-select
                placeholder="请选择时间点"
                v-model="ruleForm.activeStartTimeTime"
                :picker-options="{start: '00:00',step: '00:15',end: '23:45'}">
              </el-time-select>
            </el-form-item>
          </el-col>

          <el-col :span="1" style="text-align: center;">—</el-col>

          <el-col :span="5">
            <el-form-item prop="activeEndTimeDate">

              <el-date-picker
                v-model="ruleForm.activeEndTimeDate"
                type="date"
                placeholder="活动结束日期">
              </el-date-picker>
            </el-form-item>
          </el-col>

          <el-col :span="5">
            <el-form-item prop="activeEndTimeTime">
              <el-time-select
                placeholder="请选择时间点"
                v-model="ruleForm.activeEndTimeTime"
                :picker-options="{start: '00:00',step: '00:15',end: '23:45'}">
              </el-time-select>
            </el-form-item>
          </el-col>

        </el-form-item>

        <el-form-item label="报名时间" required style="width: 750px;">
          <el-col :span="5">
              <el-form-item prop="signStartTimeDate">
                <el-date-picker
                  v-model="ruleForm.signStartTimeDate"
                  type="date"
                  placeholder="报名开始日期">
                </el-date-picker>
              </el-form-item>
          </el-col>

          <el-col :span="5">
            <el-form-item prop="signStartTimeTime">
              <el-time-select
                placeholder="请选择时间点"
                v-model="ruleForm.signStartTimeTime"
                :picker-options="{start: '00:00',step: '00:15', end: '23:45'}">
              </el-time-select>
            </el-form-item>
          </el-col>

          <el-col :span="1" style="text-align: center;">—</el-col>

          <el-col :span="5">
            <el-form-item prop="signEndTimeDate">
              <el-date-picker
                v-model="ruleForm.signEndTimeDate"
                type="date"
                placeholder="报名结束日期">
              </el-date-picker>
            </el-form-item>
          </el-col>

          <el-col :span="5">
            <el-form-item prop="signEndTimeTime">
              <el-time-select
                placeholder="请选择时间点"
                v-model="ruleForm.signEndTimeTime"
                :picker-options="{start: '00:00',step: '00:15',end: '23:45'}">
              </el-time-select>
            </el-form-item>
          </el-col>
        </el-form-item>


        <el-form-item label="活动地点" required >

	        <!-- 自己封装的一个二级联动地址选择器 -->
	        <address-select
              :province="ruleForm.province"
              :city="ruleForm.city"
              :detail="ruleForm.detail"
              :isAddressTrue="isAddressTrue"
              ></address-select>
        </el-form-item>

        <el-form-item label="活动人数">
          <el-row>
          <el-col :span="6" style="width: 187px;">
            <el-radio class="radio" v-model="ruleForm.activePerson" label="无限制">无限制</el-radio>
            <el-radio class="radio" v-model="ruleForm.activePerson" label="限制">限制</el-radio>
          </el-col>
          <el-col :span="6">
            <el-input placeholder="0" :number="true" size="large" v-model="ruleForm.activePersonNum" :disabled=" ruleForm.activePerson == '无限制' "><template slot="append">人</template></el-input>
          </el-col>
          </el-row>
        </el-form-item>

        <el-form-item label="活动封面">
          <el-upload action="http://jsonplaceholder.typicode.com/" type="drag" :multiple="true" :on-preview="handlePreview" :on-remove="handleRemove" :on-success="handleSuccess" :on-error="handleError">
            <i class="el-icon-upload"></i>
            <div class="el-dragger__text">将文件拖到此处，或<em>点击上传</em></div>
            <div class="el-upload__tip" slot="tip">只能上传jpg/png文件，且不超过2M</div>
          </el-upload>
        </el-form-item>

        <el-form-item label="活动简介">
            <el-input
              type="textarea"
              placeholder="请输入内容"
              :autosize="{minRows: 4, maxRows: 8}"
              v-model="ruleForm.activeDescribe">
            </el-input>
        </el-form-item>

        <el-form-item label="报名用户信息展示">
          <el-radio-group v-model="ruleForm.UseMsgShow">
            <el-radio label="不展示"></el-radio>
            <el-radio label="展示报名人数"></el-radio>
            <el-radio label="展示报名清单"></el-radio>
            <el-radio label="报名成功显示完整用户资料"></el-radio>
          </el-radio-group>
        </el-form-item>

        <el-form-item label="评价功能">
          <el-radio-group v-model="ruleForm.evaluate">
            <el-radio  label="不开启"></el-radio>
            <el-radio  label="实时评价"></el-radio>
            <el-radio  label="审核后评论"></el-radio>
          </el-radio-group>
        </el-form-item>

        <el-form-item label="">
          <el-row>
            <div class="el-form-item__label"> 赞助广告</div>
            <el-col  class="el-form-item__label is-active" :span="2">
              <el-button type="text" @click.native="openAd">开通赞助广告</el-button>
            </el-col>
          </el-row>
          <el-upload action="http://jsonplaceholder.typicode.com/" type="drag" :multiple="true" :on-preview="handlePreview" :on-remove="handleRemove" :on-success="handleSuccess" :on-error="handleError">
            <i class="el-icon-upload"></i>
            <div class="el-dragger__text">将文件拖到此处，或<em>点击上传</em></div>
            <div class="el-upload__tip" slot="tip">图片尺寸建议比例1；4.18，如160*666像素，且不超过2M</div>
          </el-upload>
        </el-form-item>

        <el-form-item>
          <el-input
            placeholder="请填写您的广告标题"
            size="large"
            v-model="ruleForm.adTitle">
          </el-input>
        </el-form-item>

        <el-form-item>
        <el-input
            placeholder="请填写您的广告内容"
            size="large"
            v-model="ruleForm.adContent">
          </el-input>
        </el-form-item>

        <el-form-item >
          <el-input
            placeholder="请填写您的赞助链接"
            size="large"
            v-model="ruleForm.adLink">
          </el-input>
        </el-form-item>

        </el-form>

      <!-- 弹框 -->
      <el-dialog title="添加活动标签"  v-model="dialogFormVisible" top="35%">
        <el-form :model="dialogForm">
          <el-form-item>
            <el-input v-model="dialogForm.name" auto-complete="off" ></el-input>
          </el-form-item>
        </el-form>
                <span slot="footer" class="dialog-footer">
                    <el-button @click.native="dialogFormVisible = false">取 消</el-button>
                    <el-button type="primary"  @click.native="handleAdd(dialogForm.name,dialogForm,ruleForm.tags)">添加</el-button>
                </span>
      </el-dialog>

      <!-- 设置活动分类 -->
      <el-dialog title="设置活动分类" v-model="dialogFormFenLeiVisible" >
        <el-form :model="dialogFormFenLei">
          <el-form-item>
            <el-tag
              v-for="feiLei of ruleForm.fenLeis"
              :closable="true"
              type="primary"
              @close="handleCloseFenLei(feiLei)"
              >
              {{ feiLei.name }}
            </el-tag>
          </el-form-item>
          <el-form-item>
            <el-input v-model="dialogFormFenLei.name" auto-complete="off" ></el-input>
          </el-form-item>
        </el-form>
        <span slot="footer" class="dialog-footer">
          <el-button @click.native="dialogFormFenLeiVisible = false">取 消</el-button>
          <el-button type="primary"  @click.native="handleAdd(dialogFormFenLei.name,dialogFormFenLei,ruleForm.fenLeis)">添加</el-button>
        </span>
      </el-dialog>
    </div>
</template>



<script>
  import addressSelect from 'src/components/address.vue'
  import store from 'src/store.js'

  export default {
    name:'step1',
    components: {
      'address-select' : addressSelect
    },
    data: function () {
      return {
        test:'',
        tagsValid:false,
        tagsError:'请设置标签',
        isAddressTrue:false,
        dialogFormVisible: false,
        dialogFormFenLeiVisible:false,
        dialogForm:{name:''},
        dialogFormFenLei:{name:''},
        ruleFormChange:false,
        ruleFormValid:false,
        rules: {
          name:[
            {required:true,message:'请输入活动名称',trigger:'change'}
          ],
          fenLei:[
            {required:true,message:'请选择活动分类',trigger:'change'}
          ],
          activeStartTimeDate: [{required:true,message:'请选择活动开始日期',trigger:'change'}],
          activeStartTimeTime: [{required:true,message:'请选择活动开始时间',trigger:'change'}],
          activeEndTimeDate:   [{required:true,message:'请选择活动结束日期',trigger:'change'}],
          activeEndTimeTime:   [{required:true,message:'请选择活动结束时间',trigger:'change'}],
          signStartTimeDate:   [{required:true,message:'请选择报名开始日期',trigger:'change'}],
          signStartTimeTime:   [{required:true,message:'请选择报名开始时间',trigger:'change'}],
          signEndTimeDate:     [{required:true,message:'请选择报名截止日期',trigger:'change'}],
          signEndTimeTime:     [{required:true,message:'请选择报名截止时间',trigger:'change'}],
        },
        ruleForm: {
          name: '',
          fenLeis:[
            {name: '未发布'},
            {name: '测试活动'},
            {name: '精彩活动'}
          ],
          fenLei: '',
          tags: [],
          activeStartTimeDate: '',
          activeStartTimeTime: '',
          activeEndTimeDate: '',
          activeEndTimeTime: '',
          signStartTimeDate: '',
          signStartTimeTime: '',
          signEndTimeDate: '',
          signEndTimeTime: '',
          activePerson:'',
          activePersonNum:'',
          activeDescribe:'',
          UseMsgShow:'',
          evaluate:'',
          adTitle:'',
          adContent:'',
          adLink:'',
        }
      };
    },
    watch: {
      ruleForm: {
        handler: function (val,oldVal) {
          store.commit('setRuleForm',this.ruleForm);
          this.tagsValid = !this.ruleForm.tags.length ? '' :false ;
          this.ruleFormChange = true ;
        },
        deep: true
      }
    },
    methods: {
      handleReset: function () {
        this.$refs.ruleForm.resetFields();
      },
      handleSubmit: function (ev) {},
      handleRemove: function (file, fileList) {
        console.log(file, fileList);
      },
      handlePreview: function (file) {
        console.log(file);
      },
      handleSuccess: function () {
      },
      handleError: function () {
      },
      showDialog: function () {
        if(this.ruleForm.tags.length >=5 ){
          this.$message({
            message: '最多设置5个标签',
            type: 'warning'
          });
        }else{
          this.dialogFormVisible = true;
          this.dialogForm = {};
        }
      },
      handleClose: function (tag) {
        var index = this.ruleForm.tags.indexOf(tag);
        this.ruleForm.tags.splice(index,1);
      },
      handleCloseFenLei: function (fenLei){
        var index = this.ruleForm.fenLeis.indexOf(fenLei);
        this.ruleForm.fenLeis.splice(index,1);
      },
      handleAdd: function (tag,form,tags) {
        if(tag && tag.trim().length !== 0){
          var isExist = false ;
          tag = tag.trim();
          for(var i=0;i<tags.length; i++){
            if(tags[i].name == tag ){
              isExist = true;
              break
            }
          }
          if(isExist){
            this.$message({
              message: '该标签已存在',
              type: 'warning'
            });
          }else{
            this.dialogFormVisible = false;
            this.dialogFormFenLeiVisible = false;
            tags.push({
              name: tag
            });
          }
        }else{
          this.$message({
            message: '标签不能为空',
            type: 'warning'
          });
        }
      },
      openAd: function (){
        this.$message('该功能正在完善');
      },

    },
    created: function(){
        Object.assign(this.ruleForm, store.state.ruleForm);
        var _this = this;
        setTimeout(function () {
            _this.ruleFormChange = false ;
        })
    },
      beforeRouteLeave: function (to, from, next) {
      if(to.path == '/activePublic/step2'){
        var _this = this;
        this.isAddressTrue = true ;
        this.tagsValid = (this.ruleForm.tags.length ? false : true) ;
        this.$refs.ruleForm.validate(function(valid){
          (!_this.tagsValid && valid) ? next() : next(false);
        }) ;
      }else{
        next();
      }
    }
  }
</script>
<style>
    .step{margin-bottom: 30px;}
    .step1 .demo-ruleForm .el-form-item{margin-bottom: 25px;margin-right: 50px;}

    .step1 .el-form-item.is-required .el-form-item__label:after {
      content: '*';
      color: #ff4949;
      margin-right: 4px;
    }
    .step1 .el-form-item.is-required .el-form-item__label:before { display: none; }
    /* 标签 */
    .step1 .el-tag{padding: 10px 15px;margin:10px;vertical-align: middle;height: auto;}
    .step1 .el-tag:first-child{margin-left: 0;}

    /* 对话框 */
    .step1 .el-dialog--small{width: 564px;}
    .step1 .el-dialog__body{padding-bottom: 0;}
    .step1 .el-dialog__body .el-form-item{margin-bottom: 10px;}
    .step1 .el-dialog__wrapper  .el-button{margin-left: 15px;}


   /* 时间选择器 */
    .step1 .el-date-editor{width:150px;}

    .step1 .el-form-item .router-link{color:#fff;}
    .el-form-item__error{white-space: nowrap;}
</style>

29:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activePublic\step2.vue
<template>
  <div class="step2">

    <el-form ref="signForm" :model="signForm" label-position="top" @submit.prevent="onSubmit">

      <el-form-item label="报名限制" prop="">
          <el-radio-group v-model="signForm.signUpLimit">
              <el-radio  label="无限制" ></el-radio>
              <el-radio  label="必须关注公众号才能报名"></el-radio>
              <el-radio  label="必须成为会员才能报名"></el-radio>
              <el-radio  label="必须分享才能报名"></el-radio>
          </el-radio-group>
        </el-form-item>

      <el-form-item label="每人可报名额限制" prop="">
        <el-row>
          <el-col :span="6">
            <el-radio class="radio" v-model="signForm.numLimit"  label="无限制"></el-radio>
            <el-radio class="radio" v-model="signForm.numLimit"  label="限制"></el-radio>
          </el-col>
          <el-col :span="6">
            <el-input placeholder="0" :number="true" size="large" v-model="signForm.numLimitDetail" :disabled=" signForm.numLimit == '无限制' "><template slot="append">人</template></el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="付费活动" prop="">
        <el-row>
          <el-col :span="6">
            <el-radio class="radio" v-model="signForm.cost" label="免费" ></el-radio>
            <el-radio class="radio" v-model="signForm.cost" label="费用"></el-radio>
          </el-col>
          <el-col :span="6">
            <el-input placeholder="0" :number="true" size="large" v-model="signForm.costDetail" :disabled="signForm.cost == '免费'"><template slot="append">元</template></el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="允许取消报名" prop="">
        <el-row>
          <el-col :span="6">
            <el-radio class="radio" v-model="signForm.cancel"  label="不允许" ></el-radio>
            <el-radio class="radio" v-model="signForm.cancel"  label="允许"></el-radio>
          </el-col>
          <el-col :span="6">
            <el-input placeholder="活动前几小时"  size="large" v-model="signForm.costDetail" :disabled="signForm.cancel == '不允许'"><template slot="append">小时</template></el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="报名是否需要审核" prop="">
        <el-row>
          <el-col :span="6">
            <el-radio class="radio" v-model="signForm.audit"  label="不需要" ></el-radio>
            <el-radio class="radio" v-model="signForm.audit"  label="需要"></el-radio>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="设置报名表" prop="" class="setSign">

            <el-row :gutter="20" v-for="item of signForm.signFormList">
                <el-col :span="3">
                  <el-checkbox class="checkbox" v-model="item.require">必填</el-checkbox>
                </el-col>
                <el-col :span="4" class="title">
                    <el-input   v-model="item.title" size="large"></el-input>
                </el-col>
                <el-col :span="10">
                      <el-input   :placeholder="'提示语:请输入您的'+item.title" size="large" readonly></el-input>
                </el-col>

                <el-button icon="delete" @click.native.prevent="removeItem(item)" title="删除"></el-button>

                <el-dropdown trigger="click"  style="margin-left: 10px;color: #20a0ff;">
                  <el-button>
                    移动<i class="el-icon-caret-bottom el-icon-right"></i>
                  </el-button>
                    <el-dropdown-menu slot="dropdown">
                      <el-dropdown-item @click.native="moveTop(item)">置顶</el-dropdown-item>
                      <el-dropdown-item @click.native="moveUp(item)">上移</el-dropdown-item>
                      <el-dropdown-item @click.native="moveDown(item)">下移</el-dropdown-item>
                    </el-dropdown-menu>
                </el-dropdown>
            </el-row>

            <el-row>
                <el-col :span="14" :offset="5">
                    <el-button :span="24" type="primary" size="large" @click.native="addItem">添加更多</el-button>
                </el-col>
            </el-row>
      </el-form-item>

      <el-form-item label="签到条件" prop="">
        <el-row>
          <el-col :span="24">
            <el-radio class="radio" v-model="signForm.sign" label="必须报名"></el-radio>
            <el-radio class="radio" v-model="signForm.sign" label="不需要报名"></el-radio>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="签到方式" prop="">
        <el-row>
          <el-col :span="19" style="width: 633px;">
            <el-radio-group v-model="signForm.signType">
              <el-radio  label="签到二维码"></el-radio>
              <el-radio  label="入场二维码"></el-radio>
              <el-radio  label="会员二位码"></el-radio>
              <el-radio  label="手机号"></el-radio>
              <el-radio  label="暗号"></el-radio>
            </el-radio-group>
          </el-col>
          <el-col :span="5" :pull="2">
              <el-input :disabled="signForm.signType != '暗号'" v-model="signForm.secretCode"  placeholder="请填写您的暗号"  size="large"></el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <transition name="list">
        <el-form-item label="生成签到二维码" v-show="signForm.signType == '签到二维码'">
            <el-col :span="4" style="width: 130px;">
                <img width="100" height="100" :src="imgUrl">
            </el-col>

            <el-col :span="4">
                <el-button @click.native="createQRcode">生成</el-button>
            </el-col>
        </el-form-item>
      </transition>

    </el-form>


  </div>
</template>
<script>
  import store from 'src/store.js'

  export default {
    name: 'step2',
    data: function () {
      return {
        imgUrl: '',
        signForm: {
          signUpLimit: '无限制',
          numLimit: '无限制',
          numLimitDetail: '',
          cost: '免费',
          costDetail: '',
          cancel: '不允许',
          audit: '不需要',
          needName: true,
          needTel: true,
          signFormList: [
            {title: '姓名', require: true},
            {title: '手机', require: true}
          ],
          sign: '必须报名',
          signType: '签到二维码',
          secretCode: ''
        }
      }
    },
    watch: {
      signForm: {
        handler: function () {
          store.commit('setSignForm', this.signForm);
        },
        deep: true
      }
    },
    methods: {
      onSubmit: function () {
        console.log('submit!');
      },
      addItem: function () {
        var n = this.signForm.signFormList ? this.signForm.signFormList.length + 1 : 1;
        this.signForm.signFormList.push({
          title: '标题' + n,
          require: false
        });
      },
      removeItem: function (item) {
        var index = this.signForm.signFormList.indexOf(item);
        this.signForm.signFormList.splice(index, 1);
      },

      moveTop: function (item) {
        var index = this.signForm.signFormList.indexOf(item);
        if(index != 0){
          this.signForm.signFormList.splice(index,1);
          this.signForm.signFormList.splice(0,0,item);
        }
      },
      moveUp: function (item) {
        var index = this.signForm.signFormList.indexOf(item);
        if(index != 0){
        this.signForm.signFormList.splice(index,1);
        this.signForm.signFormList.splice(index-1,0,item);
        }
      },
      moveDown: function (item) {
        var index = this.signForm.signFormList.indexOf(item);
        var max = this.signForm.signFormList.length ;
        if(index != max){
          this.signForm.signFormList.splice(index,1);
          this.signForm.signFormList.splice(index+1,0,item);
        }
      },
      createQRcode: function () {
        console.log('生成二维码');
        this.$notify.info({
          title: '消息',
          message: '该功能正在完善中'
        });
      }
    },
    created: function () {
      Object.assign(this.signForm, store.state.signForm);
    }
  }
</script>
<style>
  .step2 .setSign .el-row{line-height: 40px;margin-bottom: 10px;}
  .step2 .title{text-align: right;}
  .step2 .router-link{color:#333;}
  .step2 .el-button-primary .router-link{color:#fff;}
  /* dialog 的大小 */
  .step2 .el-dialog--small{min-width: 400px;max-width: 500px;}

  .list-enter-active, .list-leave-active {
    transition: all 1s;
  }
  .list-enter, .list-leave-active {
    opacity: 0;
    transform: translateY(30px);
  }

</style>

30:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activePublic\step3.vue
<template>
  <div class="step3">
    <el-form label-position="top" ref="shareForm" :model="shareForm" class="demo-form-stacked">

      <el-form-item label="分享标题">
        <el-input v-model="shareForm.title"></el-input>
      </el-form-item>

      <el-form-item label="分享描述">
        <el-input v-model="shareForm.describe"></el-input>
      </el-form-item>

      <el-form-item label="分享图片">
        <el-upload
          action="http://jsonplaceholder.typicode.com/"
          type="drag"
          :thumbnail-mode="true"
          :on-preview="handlePreview"
          :on-remove="handleRemove"
          >
          <i class="el-icon-upload"></i>
          <div class="el-dragger__text">将文件拖到此处，或<em>点击上传</em></div>
          <div class="el-upload__tip" slot="tip">图片尺寸建议比例1:1,如160*160像素，图片不能大于2M</div>
        </el-upload>
      </el-form-item>
    </el-form>
  </div>
  </template>

<script>
    import store from 'src/store.js'

    export default {
        name: 'step3',
        data: function () {
            return {
                shareForm: {
                    title: '',
                    describe: ''
                }
            }
        },
        watch: {
            shareForm: {
                handler: function () {
                    store.commit('setShareForm', this.shareForm);
                } ,
                deep:true
            }
        },
        methods: {
            handleRemove: function (file, fileList) {
                console.log(file, fileList);
            },
            handlePreview: function (file) {
                console.log(file);
            }
        },
        created: function () {
            store.state.shareForm && Object.assign(this.shareForm, store.state.shareForm);
        }
    }
</script>
<style>
  .step3 .router-link{color:#333;}
  .step3 .el-button-primary .router-link{color:#fff;}
</style>

31:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\activePublic\step4.vue
<template>
  <div class="step4">
    <el-form label-position="top" :model="selfForm" class="demo-form-stacked">
      <el-form-item label="消息推送">
          <el-row>
              <el-col :span="4">
                  <el-checkbox class="checkbox" v-model="selfForm.signUpSuccess" checked>报名成功</el-checkbox>
              </el-col>
              <el-col :span="18">
                  <el-input
                    type="textarea"
                    placeholder="请输入内容"
                    :autosize="{minRows: 2, maxRows: 5}"
                    v-model="selfForm.signUpSuccessText">
                  </el-input>
              </el-col>
          </el-row>
      </el-form-item>

      <el-form-item label="">
        <el-row>
          <el-col :span="4">
            <el-checkbox class="checkbox" v-model="selfForm.auditSuccess" checked>审核通过</el-checkbox>
          </el-col>
          <el-col :span="18">
            <el-input
              type="textarea"
              placeholder="请输入内容"
              :autosize="{minRows: 2, maxRows: 5}"
              v-model="selfForm.auditSuccessText">
            </el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="">
        <el-row>
          <el-col :span="4">
            <el-checkbox class="checkbox" v-model="selfForm.auditFailed" checked>审核不通过</el-checkbox>
          </el-col>
          <el-col :span="18">
            <el-input
              type="textarea"
              placeholder="请输入内容"
              :autosize="{minRows: 2, maxRows: 5}"
              v-model="selfForm.auditFailedText">
            </el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="">
        <el-row>
          <el-col :span="4">
            <el-checkbox class="checkbox" v-model="selfForm.signInSuccess" checked>签到成功</el-checkbox>
          </el-col>
          <el-col :span="18">
            <el-input
              type="textarea"
              placeholder="请输入内容"
              :autosize="{minRows: 2, maxRows: 5}"
              v-model="selfForm.signInSuccessText">
            </el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="">
        <el-row>
          <el-col :span="4">
            <el-checkbox class="checkbox" v-model="selfForm.signInFailed" checked>签到失败</el-checkbox>
          </el-col>
          <el-col :span="18">
            <el-input
              type="textarea"
              placeholder="请输入内容"
              :autosize="{minRows: 2, maxRows: 5}"
              v-model="selfForm.signInFailedText">
            </el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="">
        <el-row>
          <el-col :span="4">
            <el-checkbox class="checkbox" v-model="selfForm.signInDouble" checked>重复签到</el-checkbox>
          </el-col>
          <el-col :span="18">
            <el-input
              type="textarea"
              placeholder="请输入内容"
              :autosize="{minRows: 2, maxRows: 5}"
              v-model="selfForm.signInDoubleText">
            </el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="微信提醒">
          <el-row :gutter="20">
              <el-col :span="7">
                  <el-radio class="radio" v-model="selfForm.remind" label="不提醒"></el-radio>
                  <el-radio class="radio" v-model="selfForm.remind" label="提醒"></el-radio>
              </el-col>
              <el-col :span="4">
                  <el-select  :disabled="selfForm.remind != '提醒'" v-model="selfForm.remindTime" placeholder="提前几小时">
                      <el-option
                        v-for="n of 24"
                        :value="n"></el-option>
                  </el-select>
              </el-col>
              <el-col :span="10">
                  <el-input placeholder="请填写您的微信提醒" :disabled="selfForm.remind != '提醒'" v-model="selfForm.remindText"></el-input>
              </el-col>
          </el-row>
      </el-form-item>

      <el-form-item label="">
        <el-row>
          <div class="el-form-item__label"> 活动报名使用积分</div>
          <el-col  class="el-form-item__label is-active" :span="4">
            <el-button type="text" @click.native="showMeg(1)">了解积分规则</el-button>
          </el-col>
        </el-row>
        <el-row :gutter="20">
          <el-col :span="7">
            <el-radio class="radio" v-model="selfForm.useScore" label="不使用" ></el-radio>
            <el-radio class="radio" v-model="selfForm.useScore" label="使用"></el-radio>
          </el-col>

          <el-col :span="7">
            <el-input placeholder="0" :disabled="selfForm.useScore != '使用'" size="large" :number="true" v-model="selfForm.useScoreNum"><template slot="append">积分</template></el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="活动报名获得积分">
        <el-row :gutter="20">
          <el-col :span="7">
            <el-radio class="radio" v-model="selfForm.signUpScore" label="无积分" ></el-radio>
            <el-radio class="radio" v-model="selfForm.signUpScore" label="获得积分"></el-radio>
          </el-col>

          <el-col :span="7">
            <el-input placeholder="0"  :disabled="selfForm.signUpScore != '获得积分'" size="large" :number="true" v-model="selfForm.signUpScoreNum"><template slot="append">积分</template></el-input>
          </el-col>
        </el-row>
      </el-form-item>
      <el-form-item label="分享活动获得积分">
        <el-row :gutter="20">
          <el-col :span="7">
            <el-radio class="radio" v-model="selfForm.shareScore" label="无积分" ></el-radio>
            <el-radio class="radio" v-model="selfForm.shareScore" label="获得积分"></el-radio>
          </el-col>

          <el-col :span="7">
            <el-input placeholder="0" :disabled="selfForm.shareScore != '获得积分'"  size="large" :number="true" v-model="selfForm.shareScoreNum"><template slot="append">积分</template></el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="分享后每个阅读量获得积分">
        <el-row :gutter="20">
          <el-col :span="7">
            <el-radio class="radio" v-model="selfForm.shareReadScore" label="无积分" ></el-radio>
            <el-radio class="radio" v-model="selfForm.shareReadScore" label="获得积分"></el-radio>
          </el-col>

          <el-col :span="7">
            <el-input placeholder="0" :disabled="selfForm.shareReadScore != '获得积分'" size="large" :number="true" v-model="selfForm.shareReadScoreNum"><template slot="append">积分</template></el-input>
          </el-col>
          <el-col :span="2" style="line-height: 42px;text-align: right;">
              上限
          </el-col>
          <el-col :span="7">
            <el-input placeholder="0"  :disabled="selfForm.shareReadScore != '获得积分'"  size="large" :number="true" v-model="selfForm.shareReadScoreNumMax"><template slot="append">积分</template></el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="分享后好友报名获得积分">
        <el-row :gutter="20">
          <el-col :span="7">
            <el-radio class="radio" v-model="selfForm.shareSignUp" label="无积分" checked></el-radio>
            <el-radio class="radio" v-model="selfForm.shareSignUp" label="获得积分"></el-radio>
          </el-col>

          <el-col :span="7">
            <el-input placeholder="0" size="large" :disabled ="selfForm.shareSignUp != '获得积分'" :number="true" v-model="selfForm.shareSignUpNum"><template slot="append">积分</template></el-input>
          </el-col>
          <el-col :span="2" style="line-height: 42px;text-align: right;">
            上限
          </el-col>
          <el-col :span="7">
            <el-input placeholder="0" size="large" :disabled ="selfForm.shareSignUp != '获得积分'"  :number="true" v-model="selfForm.shareSignUpNumMax"><template slot="append">积分</template></el-input>
          </el-col>
        </el-row>
      </el-form-item>

      <el-form-item label="用户分享后，页面跳转至">
            <el-radio-group v-model="selfForm.afterShare">
              <el-radio label="不跳转"></el-radio>
              <el-radio label="图文库"></el-radio>
              <el-radio label="活动库"></el-radio>
              <el-radio label="问卷库"></el-radio>
              <el-radio label="试卷库"></el-radio>
              <el-radio label="大转盘"></el-radio>
              <el-radio label="砸金蛋"></el-radio>
              <el-radio label="自定义链接"></el-radio>
            </el-radio-group>

            <el-input
              v-show="selfForm.afterShare == '自定义链接'"
              placeholder="请输入自定义链接"
              v-model="selfForm.afterShareLink">
            </el-input>
      </el-form-item>

      <el-form-item label="用户报名后，页面跳转至">

        <el-radio-group v-model="selfForm.afterSingUp">
          <el-radio  label="不跳转"></el-radio>
          <el-radio  label="图文库"></el-radio>
          <el-radio  label="活动库"></el-radio>
          <el-radio  label="问卷库"></el-radio>
          <el-radio  label="试卷库"></el-radio>
          <el-radio  label="大转盘"></el-radio>
          <el-radio  label="砸金蛋"></el-radio>
          <el-radio  label="自定义链接"></el-radio>
        </el-radio-group>

        <el-input
          v-show="selfForm.afterSingUp == '自定义链接'"
          placeholder="请输入自定义链接"
          v-model="selfForm.afterSingUpLink">
        </el-input>

      </el-form-item>

      <el-form-item label="">
        <el-row>
           <div class="el-form-item__label"> 配置截屏分享图片</div>
          <el-col  class="el-form-item__label is-active" :span="4">
              <el-button type="text" @click.native="showMeg(2)">了解截屏分享图片</el-button>
          </el-col>
        </el-row>
        <el-radio-group v-model="selfForm.shareImg">
          <el-radio  label="不配置"></el-radio>
          <el-radio  label="配置"></el-radio>
        </el-radio-group>
      </el-form-item>
    </el-form>

    <el-dialog title="提示" v-model="dialogVisible" size="tiny">
        <div v-html="DialogInnerHtml"></div>
        <span slot="footer" class="dialog-footer">
          <el-button @click.native="dialogVisible = false">取 消</el-button>
          <el-button type="primary" @click.native="dialogVisible = false">确 定</el-button>
        </span>
    </el-dialog>

  </div>
</template>



<script>
    import store from 'src/store.js'

    const template1 = `<span style="font-size: 16px;line-height: 1.6em;">
          积分使用
          <br/>(1) 用户可以使用积分进行指定活动的报名优惠抵扣。
          <br/>(2) 单个积分可抵扣的相应的优惠值由活动方自己定义。例如：1个积分抵扣2元报名费。 <br/>
          <br/>积分获取:
          <br/>(1) 活动参与者通过分享活动，报名活动，或由分享后带来的好友阅读量，好友报名数等途径获得积分。
          <br/>(2) 一次活动获得的积分只对本次活动可用。</span>` ;
    const template2 =`<span>该功能正在完善中~</span>`;

    export default {
      name:'step4',
       data: function () {
         return {
           dialogVisible:false,
           DialogInnerHtml:template1,
           selfForm:{
             signUpSuccess:true,       // 报名成功
             signUpSuccessText:'您已成功报名***(默认活动标题名)活动',
             auditSuccess:true,
             auditSuccessText:'您报名的***(默认活动标题名)活动，已审核通过',
             auditFailed:true,
             auditFailedText:'您报名的***(默认活动标题名)活动，审核不通过',
             signInSuccess:true,
             signInSuccessText:'***(默认用户名)您好！恭喜您签到成功！',
             signInFailed:true,
             signInFailedText:'抱歉，签到失败',
             signInDouble:true,
             signInDoubleText:'请勿重复签到！',
             remind:'',
             remindTime:'',
             remindText:'',
             useScore:'',
             useScoreNum:'',
             signUpScore:'',
             signUpScoreNum:'',
             shareScore:'',
             shareScoreNum:'',
             shareReadScore:'',
             shareReadScoreNum:'',
             shareReadScoreNumMax:'',
             shareSignUp:'',
             shareSignUpNum:'',
             shareSignUpNumMax:'',
             afterShare:'',
             afterShareLink:'',
             afterSingUp:'',
             afterSingUpLink:'',
             shareImg:'',
             shareImgUrl:''
           }
         }
       },
        watch: {
            selfForm: {
                handler: function () {
                    store.commit('setSelfForm', this.selfForm);
                } ,
                deep:true
            }
        },
        methods: {
            showMeg: function (n) {
                this.dialogVisible = true;

                this.DialogInnerHtml = n == 1 ? template1 : template2;
            }
        },
        created: function () {
            Object.assign(this.selfForm, store.state.selfForm);
        }
    }
</script>
<style>
  .step4 .router-link{color:#333;}
  .step4 .el-button-primary .router-link{color:#fff;}
  .step4 .is-active{color: #20a0ff;cursor: pointer;}

</style>

32:F:\git\nodejs\vue\vuestep\2019422\houtai\src\page\test\test1.vue
<template>
    <s-view-box showCurrentBreadcrumb class="stock">
        <div slot="header_right">
            <div style="display: inline-block;position: absolute; right:0;">
                <el-input placeholder="请输入内容" v-model="skeys" style="width: 300px;" @keyup.native.enter='searchData'>
                    <el-button slot="append" icon="search" @click.native='searchData'></el-button>
                </el-input>
            </div>
        </div>
        <div>
            <div style='height: 70px;'>
                <el-form :inline="true" :model="form" ref="form" class="s-form-noerror" label-width="40px" label-position="left">
                    <el-row :gutter="5">
                        <el-col :span="5">
                            <el-form-item label="仓店" style="width: 100%;">
                                <el-input v-model="form.storeName" placeholder="点击选择" @click.native="openSelDialog('选择仓店','store')" size="small" style="width:100%"></el-input>
                            </el-form-item>
                        </el-col>
                        <el-col :span="5">
                            <el-form-item label="品牌" style="width: 100%;">
                                <el-select  size="small" v-model="form.brand">
                                    <el-option :label="brand.name" :value="brand.id" v-for="brand in brandStore"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                        <el-col :span="5">
                            <el-form-item label="库存" style="width: 100%;">
                                <el-select size="small" v-model="form.s_num">
                                    <el-option label="全部" :value="2"></el-option>
                                    <el-option label="有" :value="0"></el-option>
                                    <el-option label="无" :value="1"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                        <el-col :span="5">
                            <el-form-item label="在途" style="width: 100%;">
                                <el-select size="small" v-model="form.o_num">
                                    <el-option label="全部" :value="2"></el-option>
                                    <el-option label="有" :value="0"></el-option>
                                    <el-option label="无" :value="1"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                        <el-col :span="4">
                            <el-form-item class="s-checkbox-item" style="width: 100%; padding-top: 5px;">
                                <el-checkbox v-model="form.sizeView" size="small">尺码视图</el-checkbox>
                            </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row :gutter="5">
                        <el-col :span="5">
                            <el-form-item label="年份" style="width: 100%;">
                                <el-date-picker v-model="form.year" align="right" type="year" placeholder="选择年" size="small" style="width: 100%;"> </el-date-picker>
                            </el-form-item>
                        </el-col>
                        <el-col :span="5">
                            <el-form-item label="季节" style="width: 100%;">
                                <el-select  size="small" v-model="form.season">
                                    <el-option :label="season.name" :value="season.id" v-for="season in seasonStore"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                        <el-col :span="5">
                            <el-form-item label="波段" style="width: 100%;">
                                <el-input v-model="form.bandName" placeholder="点击选择" @click.native="openSelDialog('选择仓店','band')" size="small" style="width:100%"></el-input>
                            </el-form-item>
                        </el-col>
                        <el-col :span="5">
                            <el-form-item label="品类" style="width: 100%;">
                                <el-input v-model="form.categoryName" placeholder="点击选择" @click.native="openSelDialog('选择仓店','category')" size="small" style="width:100%"></el-input>
                            </el-form-item>
                        </el-col>
                        <el-col :span="4">
                            <el-button type="primary" icon="search"  @click.native="searchData" size="small">查询</el-button>
                            <a style="height:30px;margin-left:10px;line-height: 30px;color: #1596ad;cursor: pointer;" @click="doExcel">
                                <i class="el-icon-upload2"></i>
                                <span>导出</span>
                            </a>
                        </el-col>
                    </el-row>
                </el-form>
            </div>

            <s-table :dataSource="dataSource" :summary="tableSummary" :defaultQuery="tableQuery" ref="table" :height="tableHeight" responseData="list">
                <template v-if='viewType==0'>
                    <el-table-column type='index' label='#' width='60' :resizable="false"></el-table-column>
                    <el-table-column prop='skuCode' label='商品编号' width='150' :sortable='true' :resizable="false">
                        <template scope="scope">
                            <el-button @click="showDetail(scope.row)" type="text" size="small">{{scope.row.skuCode}}</el-button>
                        </template>
                    </el-table-column>
                    <el-table-column prop='styleName' label='款式名称' width='120' :sortable='true' :resizable="true" :context="_self">
                    </el-table-column>
                    <el-table-column prop='storeName' label='仓店' width='120' :sortable='true' :resizable="false">
                    </el-table-column>
                    <el-table-column prop='colorId' label='颜色' width='100' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='sizeId' label='尺码' width='70' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='s_num' label='库存数' width='85' :sortable='true' :resizable="false"></el-table-column>
                    <el-table-column prop='o_num' label='在途数' width='85' :sortable='true' :resizable="false"></el-table-column>
                    <el-table-column prop='brand' label='品牌' width='100' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='year' label='年份' width='70' :sortable='true' :resizable="false"></el-table-column>
                    <el-table-column prop='season' label='季节' width='70' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='category' label='品类' width='100' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='band' label='波段' width='100' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='tagSum' label='吊牌金额' width='110' :sortable='true' :resizable="false" :formatter='numberFormatter'></el-table-column>
                </template>
                <template v-else>
                    <el-table-column type='index' label='#' width='60' :resizable="false"></el-table-column>
                    <el-table-column prop='styleCode' label='款式编号' width='150' :sortable='true' :resizable="false"></el-table-column>
                    <el-table-column prop='styleName' label='款式名称' width='120' :sortable='true' :resizable="false"></el-table-column>
                    <el-table-column prop='storeName' label='仓店' width='120' :sortable='true' :resizable="false"></el-table-column>
                    <el-table-column prop='colorId' label='颜色' width='100' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <!--<el-table-column label="尺码" header-align='center' :resizable="false" >-->
                    <el-table-column :prop='item.prop' :label='item.label' :width='item.width' :sortable='item.sortable' :resizable='item.resizable' v-for='item in sizeColumns' :formatter='formatData2'></el-table-column>
                    <!--</el-table-column>-->
                    <el-table-column prop='s_num' label='库存数' width='85' :sortable='true' :resizable="false"></el-table-column>
                    <el-table-column prop='o_num' label='在途数' width='85' :sortable='true' :resizable="false"></el-table-column>
                    <el-table-column prop='brand' label='品牌' width='100' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='year' label='年份' width='70' :sortable='true' :resizable="false"></el-table-column>
                    <el-table-column prop='season' label='季节' width='70' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='category' label='品类' width='100' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='band' label='波段' width='100' :sortable='true' :resizable="false" :formatter='formatData'></el-table-column>
                    <el-table-column prop='tagSum' label='吊牌金额' width='110' :sortable='true' :resizable="false" :formatter='numberFormatter'></el-table-column>
                </template>
            </s-table>
        </div>
        <!--dialog-->
        <el-dialog :title="dialog2.title" v-model="dialog2.show" :loading='dialog2.loading'  @close='dialogClose' :size="dialog.size" :show_footer='dialog2.show_footer'>
            <div class="search-date">
                <el-form :inline='false' :model="form1"  ref="form1" class="s-form-noerror" label-width="70px" label-position="left">
                    <el-row style="margin:0 0 20px 0">
                        <el-col :span="10" style="line-height: 16px;padding:0;margin:0">
                            <el-form-item label="查询日期" stytle="line-height:35px">
                                <el-date-picker type="daterange"  placeholder="选择日期范围" :picker-options="pickerOptions0" v-model="form1.su_date" style="width: 100%;" size="small"></el-date-picker>
                            </el-form-item>
                        </el-col>
                        <el-col :span="8" style="margin-left:15px">
                            <el-button type="primary" icon="search"  @click.native="searchData2" size="small">查询</el-button>
                        </el-col>
                    </el-row>
                </el-form>
                <div class="show-data">
                    <s-table :dataSource="dataSource2"  :defaultQuery="tableQuery2" ref="table2" :height="tableHeight">
                        <el-table-column type="index" algin="center" label="序号" :width="80">
                        </el-table-column>
                        <el-table-column prop="type" algin="center" label="类型" :width="80">
                        </el-table-column>
                        <el-table-column prop="trafficNum" algin="center" label="数量" :width="80">
                        </el-table-column>
                        <el-table-column prop="trafficDate" label="时间" :width="180">
                        </el-table-column>
                        <el-table-column  prop="orderNo" label="单据编号" :width="150">
                        </el-table-column>
                        <el-table-column prop="description" label="备注" :width="180" formatter="showm">
                        </el-table-column>
                    </s-table>
                </div>
            </div>
        </el-dialog>
        <!--dialog-->
    </s-view-box>
</template>
<script>
    import SViewBox  from 'components/common/viewBox'
    import STable  from 'components/common/table'
    import SDialog  from 'components/common/dialog'
    import {SelectMuiltStore,SelectMuiltSupplier,SelectMuiltBand,SelectMuiltCategory} from 'components/dialog'
    import smtutil from 'libs/smtutil'
    export default {
        desc:'新增入库',
        components: {
            SViewBox,STable,SDialog
        },
        created(){
            let me=this
            me.userinfo = this.$store.getters.userInfo
            me.userType = me.userinfo.type
            if (me.userType==1){
                me.form.storeId = me.userinfo.store.id
                me.form.storeName = me.userinfo.store.name
            }
            const weekRange = smtutil.getWeekRange2();
            const weekRange2 = smtutil.getMonthRange2()
            me.form.su_date=[weekRange.beginDate,weekRange.endDate];
            me.form1.su_date=[smtutil.getFormatDate(weekRange2.beginDate.getTime()),smtutil.getFormatDate(weekRange2.endDate.getTime())]

            me.tableQuery={
                storeId:me.form.storeId,
                beginDate:me.form.su_date[0],
                endDate:me.form.su_date[1],
                summary:'1'
            }


            this.getOpetionStore();
        },
        asyncComputed:{
            sizeColumns:{
                get(){
                    return this.$http(this.$urlConfig.size, {
                                method: 'get'
                            }).then((response)=> {
                                let columns = []
                                response.data.forEach(obj=>{
                                columns.push({prop:obj.id,label:obj.name,width:'48',sortable:false,resizable:false})
                })
                    return columns
                });
                },
                default: []
            }
        },
        computed: {
            tableHeight(){
                return this.$store.getters.vbc_height-80
            },
            isShopRule(){
                if (this.userType==1){
                    return true
                }else{
                    return false
                }
            },
            dataSource(){
                return {
                    type:'url',
                    source:this.$urlConfig.stock
                }
            },
            dataSource2(){
                return {
                    type:'url',
                    source:this.$urlConfig.SKUTrafficAccount
                }
            }
        },
        data(){
            return{
                pickerOptions0: {
                    shortcuts: [{
                        text: '最近一周',
                        onClick(picker) {
                            const end = new Date();
                            const start = new Date();
                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
                            picker.$emit('pick', [start, end]);
                        }
                    }, {
                        text: '最近一个月',
                        onClick(picker) {
                            const end = new Date();
                            const start = new Date();
                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
                            picker.$emit('pick', [start, end]);
                        }
                    }, {
                        text: '最近三个月',
                        onClick(picker) {
                            const end = new Date();
                            const start = new Date();
                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
                            picker.$emit('pick', [start, end]);
                        }
                    }]
                },
                tableSummary:{
                    show:true,
                    list:[
                        {code:"s_num",name:"库存数",value:0},
                        {code:"o_num",name:"在途数",value:0},
                        {code:"tagSum",name:"吊牌金额",value:0},
                    ]
                },
                size:"tiny",
                dialog: {
                    show: true,
                    loading: false,
                    title: '',

                },
                dialog2: {
                    show:false,
                    loading: false,
                    title: 'dddddd',
                    size:'small',
                    show_footer:false,
                },
                dialogTableVisible:false,
                skeys:'',
                form:{
                    storeId:null,
                    storeName:null,
                    brand:"2",
                    band:null,
                    bandName:null,
                    category:null,
                    categoryName:null,
                    year:"",
                    season:"2",
                    s_num:2,
                    o_num:2,
                    sizeView:false
                },
                form1:{
                    su_date:""
                },
                storeUrl:this.$urlConfig.store,
                selLayoutData:[],
                brandStore:[],
                categoryStore:[],
                bandStore:[],
                yearStore:[
                    {'id':'2014','name':'2014'},
                    {'id':'2015','name':'2015'},
                    {'id':'2016','name':'2016'},
                    {'id':'2017','name':'2017'},
                    {'id':'2','name':'全部'}
                ],
                seasonStore:[],
                selUrl:'',
                viewType:0
            }
        },
        methods:{
            showm(description,row){
                console.log(row)
                return row.storeName
            },
            showDetail(row){
                const weekRange2 = smtutil.getMonthRange2()
                this.form1.su_date=[smtutil.getFormatDate(weekRange2.beginDate.getTime()),smtutil.getFormatDate(weekRange2.endDate.getTime())]
                this.dialog2.show = true;
                console.log(smtutil.getFormatDate(this.form.su_date[1].getTime()))
                console.log(this.form.su_date[1])
                console.log('ssss')
                //this.form1.su_date=[weekRange2.beginDate,weekRange2.endDate]
                this.tableQuery2={
                    skuId:'402880485953e61e0159590a95ce002b',//row.storeId,
                    storeId:'402881405634953601563573dc4900b3',//row.skuId,
                    su_date:['2016-03-21','2017-03-21'],//this.form1.su_date,
                    /*	    		beginDate:smtutil.getFormatDate(this.form1.su_date[0].getTime()),//this.form1.su_date[0],
                     endDate:smtutil.getFormatDate(this.form1.su_date[1].getTime()),*/
                    summary:'1'
                }
                /*		    this.form1.storeId=row.storeId;
                 this.form1.skuId=row.skuId;*/
                console.log(this.tableQuery2);
                console.log('this.tableQuery2');
                console.log(this.dataSource2.source)
                this.$refs.table2.fetchData();
            },
            closeDialog(){
                this.destroyElement()
            },
            dialogClose() {
                this.destroyElement()
                this.dialog.show = false;
            },
            numberFormatter(row,column){
                return  smtutil.numberFormatter(row[column.property],1);
            },
            formatData(row,column){
                if (column.property==='colorId'){
                    return row.colorCode+row.colorName
                }else if (column.property==='sizeId'){
                    return row.sizeName
                }else if (column.property==='brand'){
                    return smtutil.getNameById(this.brandStore,row.brand)
                }else if (column.property==='season'){
                    return smtutil.getNameById(this.seasonStore,row.season)
                }else if (column.property==='category'){
                    return smtutil.getNameById(this.categoryStore,row.category)
                }else if (column.property==='band'){
                    return smtutil.getNameById(this.bandStore,row.band);
                }else{
                    return ''
                }
            },
            formatData2(row,column){
                console.log(row);
                console.log("sss")
                return smtutil.zeroFormatter(row[column.property])
            },
            cancelDialog(){
                me.$msgbox.confirm('注意！取消后此页面的数据将丢失，点击【确定】确认取消，点击【取消】可继续编辑？', '入库取消', {
                    type: 'warning'
                }).then(() => {
                    me.$message({
                    type: 'info',
                    message: '入库已取消'
                });
            }).catch(() => {

                });
            },


            getOpetionStore() {
                let me = this;
                this.$http(this.$urlConfig.brand, {
                    method: 'get'
                }).then(function(response) {
                    response.data.push({'id':'2','name':'全部'});
                    me.brandStore = response.data;
                });
                this.$http(this.$urlConfig.season, {
                    method: 'get'
                }).then(function(response) {
                    response.data.push({'id':'2','name':'全部'});
                    me.seasonStore = response.data;
                });
                this.$http(this.$urlConfig.band, {
                    method: 'get'
                }).then(function(response) {
                    me.bandStore = response.data;
                });
                this.$http(this.$urlConfig.category, {
                    method: 'get'
                }).then(function(response) {
                    me.categoryStore = response.data;
                });
            },
            searchData(){

                this.viewType=this.form.sizeView?1:0
                let year=null;
                if(this.form.year!=""&& typeof this.form.year!="undefined"){
                    year=new Date(this.form.year).getFullYear()
                }
                let query={
                    storeId:this.form.storeId,
                    brand:this.form.brand,
                    band:this.form.band,
                    category:this.form.category,
                    year:year,
                    season:this.form.season,
                    s_num:this.form.s_num,
                    o_num:this.form.o_num,
                    sizeView:this.form.sizeView,
                    searchkey:this.skeys
                }
                this.$refs.table.setQuery(query);
            },
            searchData2(){
//
//	    	let dateRange=this.form1.su_date;
//	    	if(dateRange!=null&&dateRange!=""){
//	    		this.form1.su_date=[weekRange2.beginDate,weekRange2.endDate]
//		    		this.form1.beginDate=smtutil.getFormatDate(this.form1.su_date[0].getTime())
//		    		this.form1.endDate=smtutil.getFormatDate(this.form1.su_date[1].getTime())
//		    	}else{
//		    		this.form.beginDate='';
//		    		this.form.endDate='';
//		    	}
                //console.log(smtutil.getFormatDate(this.form1.su_date2[0].getTime()))
                //smtutil.getFormatDate(this.form1.su_date2[1].getTime())
//	    	this.form1.searchkey=this.skey2s
                this.$refs.table2.setQuery(this.form1);
            },
            doExcel(){
                this.viewType=this.form.sizeView?1:0
                let year=null;
                if(this.form.year!=""&& typeof this.form.year!="undefined"){
                    year=new Date(this.form.year).getFullYear()
                }
                let query={
                    storeId:this.form.storeId,
                    brand:this.form.brand,
                    band:this.form.band,
                    category:this.form.category,
                    year:year,
                    season:this.form.season,
                    s_num:this.form.s_num,
                    o_num:this.form.o_num,
                    sizeView:this.form.sizeView,
                    searchkey:this.skeys
                }
                this.$http("/rest/scrm/StockView/excel", {
                    method: 'post',
                    params: query
                }).then(function(response) {
                    window.open("/rest/base/excelexpord/download/"+response.data.params.id);
                })
            },
            openSelDialog(title,type){
                this.dialog.title=title
                let me=this;
                if(type=="store"){

                    SelectMuiltStore({
                        title:"选择仓店",
                        size:"small",
                        onClick:function(obj){
                            if (obj){
                                me.form.storeId = obj.ids.toString();
                                me.form.storeName = obj.names.toString();
                            }else{
                                me.form.storeId='';
                                me.form.storeName='';
                            }
                            this.closeDialog();
                        }
                    });
                }else if(type=='category'){
                    SelectMuiltCategory({
                        title:"选择品类",
                        size:"small",
                        onClick:function(obj){
                            if (obj){
                                me.form.category = obj.ids.toString();
                                me.form.categoryName = obj.names.toString();
                            }else{
                                me.form.category='';
                                me.form.categoryName='';
                            }
                            this.closeDialog();
                        }
                    });
                }else if(type=='band'){
                    SelectMuiltBand({
                        title:"选择波段",
                        size:"small",
                        onClick:function(obj){
                            if (obj){
                                me.form.band = obj.ids.toString();
                                me.form.bandName = obj.names.toString();
                            }else{
                                me.form.band='';
                                me.form.bandName='';
                            }
                            this.closeDialog();
                        }
                    });
                }
            }
        }
    }
</script>
<style>
    .stock .el-radio + .el-radio {
        margin-left: 2px;
    }
    .search-date .el-form-item__label {
        text-align: right;
        vertical-align: middle;
        float: left;
        font-size: 14px;
        color: #48576a;
        line-height: 1;
        padding: 0px 12px 0px 0;
        box-sizing: border-box;
        line-height: 30px;
    }
</style>

33:F:\git\nodejs\vue\vuestep\2019422\houtai\src\router-config.js

import activePublic from './page/activePublic/index.vue'
import step1 from './page/activePublic/step1.vue'
import step2 from './page/activePublic/step2.vue'
import step3 from './page/activePublic/step3.vue'
import step4 from './page/activePublic/step4.vue'

import totalpages from './page/activeManage/totalpages.vue'
import activeManage from './page/activeManage/index.vue'
import detail from './page/activeManage/detail.vue'

import page1 from './page/activeManage/page1.vue'
import page2 from './page/activeManage/page2.vue'
import page3 from './page/activeManage/page3.vue'
import page4 from './page/activeManage/page4.vue'
import page5 from './page/activeManage/page5.vue'


export default [
  {
    path: '/activeManage',component:totalpages,
    children:[
      { path: ''      , component: activeManage  },
      {
        path: 'detail', component: detail,

        children: [
          {path:'',component: page1},
          {
            path: 'page1', component: page1,
            children: [
              {path: '', component: step1},
              {path: 'step1', component: step1},
              {path: 'step2', component: step2},
              {path: 'step3', component: step3},
              {path: 'step4', component: step4}
            ]
          },
          { path: 'page2', component: page2  },
          { path: 'page3', component: page3  },
          { path: 'page4', component: page4  },
          { path: 'page5', component: page5  }
        ]
      },
    ]
  },{
    path:'/activePublic',component:activePublic,
    children:[
      { path: ''      , component: step1  },
      { path: 'step1', component: step1  },
      { path: 'step2', component: step2  },
      { path: 'step3', component: step3  },
      { path: 'step4', component: step4  }
    ]
  }
]

34:F:\git\nodejs\vue\vuestep\2019422\houtai\src\store.js
import Vue from 'vue'
import Vuex from 'vuex'

Vue.use(Vuex)

/* 测试数据 */
const date = 'Mon Oct 17 2016 00:00:00 GMT+0800 (中国标准时间)'
const ruleForm = {
    name: '测试活动',
    fenLeis:[
        {name: '未发布'},
        {name: '测试活动'},
        {name: '精彩活动'}
    ],
    fenLei: '未发布',
    tags: [{name:'喳喳'}],
    activeStartTimeDate: date,
    activeStartTimeTime: '00:45',
    activeEndTimeDate: date,
    activeEndTimeTime: '00:45',
    signStartTimeDate: date,
    signStartTimeTime: '00:45',
    signEndTimeDate: date,
    signEndTimeTime: '00:45',
    activePerson:'',
    activePersonNum:'',
    activeDescribe:'',
    UseMsgShow:'',
    evaluate:'',
    adTitle:'',
    adContent:'',
    adLink:'',
    province:'广东省',
    city:'广州市',
    detail:'番禺区广州大学城超谷科技园'
}

const signForm ={
    signUpLimit: '无限制',
    numLimit: '无限制',
    numLimitDetail: '',
    cost: '免费',
    costDetail: '',
    cancel: '不允许',
    audit: '不需要',
    needName: true,
    needTel: true,
    signFormList:[
        {title:'姓名',require:true},
        {title:'手机',require:true},
        {title:'性别',require:true},
        {title:'婚姻状况',require:true}
    ],
    sign: '必须报名',
    signType: '签到二维码',
    secretCode: ''
}

const shareForm ={
    title: '分享Allen的祖传链接',
    describe: '这个链接很吊！'
}

const selfForm ={
    signUpSuccess:true,       // 报名成功
    signUpSuccessText:'您已成功报名***(默认活动标题名)活动',
    auditSuccess:true,
    auditSuccessText:'您报名的***(默认活动标题名)活动，已审核通过',
    auditFailed:true,
    auditFailedText:'您报名的***(默认活动标题名)活动，审核不通过',
    signInSuccess:true,
    signInSuccessText:'***(默认用户名)您好！恭喜您签到成功！',
    signInFailed:true,
    signInFailedText:'抱歉，签到失败',
    signInDouble:true,
    signInDoubleText:'请勿重复签到！',
    remind:'不提醒',
    remindTime:'',
    remindText:'',
    useScore:'不使用',
    useScoreNum:'',
    signUpScore:'无积分',
    signUpScoreNum:'',
    shareScore:'无积分',
    shareScoreNum:'',
    shareReadScore:'无积分',
    shareReadScoreNum:'',
    shareReadScoreNumMax:'',
    shareSignUp:'无积分',
    shareSignUpNum:'',
    shareSignUpNumMax:'',
    afterShare:'',
    afterShareLink:'',
    afterSingUp:'',
    afterSingUpLink:'',
    shareImg:'',
    shareImgUrl:''
}
const data = [
    {
        id:'1111',
        name: 'Allen',
        type:'测试活动',
        status:'未开始',
        readNum:200,
        signUpNum:100,
        auditNum:5,
        activeMessage:{}
    },
    {
        id:'2222',
        name: '王小虎',
        type:'测试活动',
        status:'已结束',
        readNum:200,
        signUpNum:100,
        auditNum:8,
        activeMessage:{}
    }
]
/* 活动管理测试数据 */
/*
 * ruleForm  1、活动信息的表单
 * signFrom  2、报名的表单
 * shareFrom 3、报名的表单
 * selfFrom  4、个性设置的表单
 * activeList 活动列表
 * */
const state = {
    ruleForm: ruleForm,
    signForm: {},
    shareForm: {},
    selfForm: {},
    activeList:data
}

/* 从本地存储读取数据 */
for(var item in state){
  localStorage.getItem(item)?
    state[item] = JSON.parse(localStorage.getItem(item)): false;
}

const mutations = {
    setRuleForm(state, payload) {
        Object.assign(state.ruleForm, payload);
        localStorage.setItem('ruleForm',JSON.stringify(payload));
    },
    setSignForm(state, payload) {
        Object.assign(state.signForm, payload);
      localStorage.setItem('signForm',JSON.stringify(payload));

    },
    setShareForm(state, payload) {
        Object.assign(state.shareForm, payload);
      localStorage.setItem('shareForm',JSON.stringify(payload));
    },
    setSelfForm(state, payload) {
        Object.assign(state.selfForm, payload);
      localStorage.setItem('selfForm',JSON.stringify(payload));
    }
}

export default  new Vuex.Store({
    state,
    mutations
})

35:F:\git\nodejs\vue\vuestep\2019422\vue-news\index.html
<!DOCTYPE html>
<html lang="en">
  <head>
  	<title>智能社Vue新闻、博客项目-http://www.zhinengshe.com</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta charset="UTF-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="renderer" content="webkit">
    <meta content="yes" name="apple-mobile-web-app-capable">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">
    <meta name="description" content=" ">
    <meta name="keywords" content="">
    <meta name="format-detection" content="telephone=no">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">

    <script src="./src/assets/js/font.js"></script>
    <script src="./src/assets/js/jquery-1.7.2.js"></script>
    <script src="./src/assets/js/swipe.js"></script>
  </head>
  <body>
    <div id="app"></div>
    <script src="/dist/build.js"></script>
  </body>
</html>

36:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\App.vue
<template>
	<div id="app">
		<loading v-if="loading"></loading>
		<NavHeader v-show="headShow"></NavHeader>
		<transition name="slide-down">
			<keep-alive>
	        	<router-view class="router-view"></router-view>
	      	</keep-alive>
		</transition>
		<FooterView v-show="footerShow"></FooterView>
	</div>
</template>
<script>
	import NavHeader from './components/Nav.vue'
	import FooterView from './components/Footer.vue'

	import Home from './components/Home.vue'

	import {mapGetters} from 'vuex'

	export default{
		computed:mapGetters([
			'headShow',
			'loading',
			'footerShow'
		]),
		mounted(){
			var path=this.$route.path.substring(1);
			this.headerChange(path);
			this.footerChange(path);
		},
		watch:{
			$route(to){
				var path=to.path.substring(1);
				this.headerChange(path);
				this.footerChange(path);
			}
		},
		methods:{
			headerChange(path){
				if(path=='user-info' || path=='user-reg' || path=='user-login' || path.indexOf('article')!=-1){
					this.$store.dispatch('SHOW_HEAD_FAIL')
				}else{
					this.$store.dispatch('SHOW_HEAD_SUCC')
				}
			},
			footerChange(path){
				if(path.indexOf('article')==-1){
					this.$store.dispatch('showFooter');
				}else{
					this.$store.dispatch('hideFooter');
				}
			}
		},
		components:{
			Home,
			NavHeader,
			FooterView
		}
	}
</script>
<style>
	.slide-up-enter-active, .slide-up-leave-active {
	  transition: all .4s cubic-bezier(0, 1.2, 1, 0.5);
	  opacity: .7;
	  transform: translate3d(0, 4em, 0);
	}
	.slide-up-enter, .slide-up-leave-active {
	  opacity: .3;
	  transform: translate3d(0, 4em, 0);
	}

	.slide-down-enter-active, .slide-down-leave-active {
	  transition: all .4s cubic-bezier(0, 1.2, 1, 0.5);
	  opacity: .7;
	  transform: translate3d(0, 6em, 0);
	}
	.slide-down-enter, .slide-down-leave-active {
	  opacity: .1;
	  transform: translate3d(0, 6em, 0);
	}

	.slide-left-enter-active, .slide-left-leave-active {
	  transition: all .2s cubic-bezier(0, 1.2, 1, 0.5);
	  opacity: .5;
	  transform: translate3d(2em, 0, 0);
	}

	.slide-left-enter, .slide-left-leave-active {
	  opacity: .3;
	  transform: translate3d(2em, 0, 0);
	}

	.slide-right-enter-active, .slide-right-leave-active {
	  transition: all .4s cubic-bezier(0, 1.2, 1, 0.5);
	  opacity: .5;
	  transform: translate3d(5em, 0, 0);
	}
	.slide-right-enter, .slide-right-leave-active {
	  opacity: .3;
	  transform: translate3d(5em, 0, 0);
	}

	.fade-enter-active, .fade-leave-active {
	  transition: opacity .4s
	}
	.fade-enter, .fade-leave-active {
	  opacity: 0
	}
</style>

37:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\Article.vue
<template>
	<div>
		<div class="nav">
			<ul>
		    	<li class="l-btn" onclick="window.history.go(-1)"></li>
		    </ul>
		</div>
		<div class="content">
			<div class="header clear"><h2><img :src="articleData.author_face" alt=""/></h2><p>智能社</p></div>
		    <div class="cont">
		    	<h3>{{articleData.title}}</h3>
		        <div class="time"><p>{{articleData.time | normalTime}} <span><img src="../assets/img/zan.png" alt=""/></span></p></div>
		        <div class="text-box" v-html="articleData.content"></div>
		    </div>
		</div>
		<div class="foot-btn">
			<ul>
		    	<li class="say"><a href="javascript:;">
		        	<i></i><span>0</span>
		        </a></li>
		    	<li class="zan"><a href="javascript:;">
		        	<i></i><span>0</span>
		        </a></li>
		    	<li class="xing"><a href="javascript:;">
		        	<i><img src="../assets/img/xing.png" alt=""/></i>
		        </a></li>
		    	<li class="fx"><a href="javascript:;">
		        	<i><img src="../assets/img/fx.png" alt=""/></i>
		        </a></li>
		    </ul>
		</div>
	</div>
</template>
<script>
	export default{
		mounted(){
			this.fetchData(this.$route.params.id);

			//发送 隐藏footer的 action
			if(this.$route.path.indexOf('article')>0){
				this.$store.dispatch('hideFooter');
			}
		},
		data(){
			return {
				articleData:{}
			}
		},
		watch:{
			$route(to){
				//console.log(to);
				var reg=/article\/\d+/;
				if(reg.test(to.path)){
					var articleId=this.$route.params.id || 0;
					this.fetchData(articleId);
				}
			}
		},
		methods:{
			fetchData(id){
				var _this=this;
				this.$http.get('../src/data/article.data').then(function(res){
					//console.log(res.data[id]);
					_this.articleData=res.data[id];
				}).catch(function(err){
					console.log('文章详细页面:',err);
				})
			}
		}
	}
</script>
<style scoped>
	html,body{ overflow-x: hidden; }
	.nav{width:100%; position:fixed;top:0;left:0; background:#fff; border-bottom:1px solid #e8eaec; z-index:99;}
	.nav ul{width:6.4rem;height:0.45rem; padding-top:0.15rem; margin:0 auto;}
	.nav ul li{width:0.29rem;height:0.31rem; background:url(../assets/img/history.png) no-repeat 0 0; background-size:100%; margin:0 0 0 0.38rem;}
	
	.content{max-width:6.4rem; margin:0 auto; margin-top:0.6rem; background:#f2f4f5; padding-bottom:0.85rem;}
	.content .header{ padding:0.39rem 0.28rem 0.15rem 0.28rem; height:auto; background: none}
	.header h2{ float:left; margin-right:0.18rem;}
	.header p{ float:left; margin-top:0.18rem; font-size:0.3rem;}
	
	.content .cont{ padding:0 0.38rem; color:#494d4d;}
	.cont h3{ font-size:0.4rem; line-height:0.6rem; padding-bottom:0.25rem; border-bottom:1px solid #494d4d;}
	.cont .time{height:0.24rem; line-height:0.24rem; margin:0.26rem 0; }
	.time p{ float:left;position:relative;}
	.time span{width:0.33rem;height:0.32rem; position:absolute; top:-0.02rem;right:-0.35rem;}
	.time span img{width:100%;height:100%;}
	
	.cont .text-box{ font-size:0.25rem;}
	.text-box p{ line-height:0.45rem; margin-bottom:0.1rem;}
	.foot-btn{width:100%;height:0.8rem; background:#fff; border-top:1px solid #e8eaec; position:fixed; left:0;bottom:0;}
	.foot-btn ul{width:6.4rem; margin:0 auto;height:0.52rem; margin-top:0.16rem;}
	.foot-btn ul li{ float:left;}
	.foot-btn ul li a{width:100%;height:100%; display:block;}
	.foot-btn ul .say{width:2.03rem;height:0.52rem; border-right:1px solid #e8eaec;}
	.say i{width:0.36rem;height:0.26rem; background:url(../assets/img/say.png) no-repeat 0 0; background-size:100%; float:left; margin-left:0.7rem; margin-top:0.13rem;}
	.say span{height:0.26rem; float:left; line-height:0.26rem; margin-left:0.16rem; margin-top:0.13rem;}
	.foot-btn ul .zan{width:1.86rem;height:0.52rem; border-right:1px solid #e8eaec;}
	.zan i{width:0.36rem;height:0.28rem; background:url(../assets/img/zan1.png) no-repeat 0 0; background-size:100%; float:left; margin-left:0.54rem; margin-top:0.13rem;}
	.zan span{height:0.26rem; float:left; line-height:0.26rem; margin-left:0.16rem; margin-top:0.13rem;}
	.foot-btn ul .xing{width:1.2rem;height:0.52rem; border-right:1px solid #e8eaec;}
	.xing i{width:0.34rem;height:0.24rem; margin:0 auto; display:block; padding-top:0.1rem;}
	.xing i img{width:100%;}
	.foot-btn ul .fx{width:1.25rem;height:0.52rem;}
	.fx i{width:0.33rem;height:0.08rem;display:block; margin:0 auto; padding-top:0.15rem;}
	.fx i img{width:100%;}
</style>

38:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\Column.vue
<template>
	<div class="content mt40">
	    <div class="newsList">
	    	<ul>
	            <li>
	            	<a href="conText.html">
	                    <h2>这是栏目的东西，栏目的东西</h2>
	                    <p>还可以降低首付款健还可以降低首付款健身房还可以降低首付款健身房身房还可以降低首付款健还可以降低首付款健身房身房</p>
	                </a>
	            </li>
	            <li>
	            	<a href="conText.html">
	                    <h2>还可以降低首付款健身房还可以降低首付款健身房还可以降低首付款健身房333</h2>
	                    <p>还可以降低首付款健还可以降低首付款健身房还可以降低首付款健身房身房还可以降低首付款健还可以降低首付款健身房身房</p>
	                </a>
	            </li>
	            <li>
	            	<a href="conText.html">
	                    <h2>还可以降低首付款健身房还可以降低首付款健身房还可以降低首付款健身房333</h2>
	                    <p>还可以降低首付款健还可以降低首付款健身房还可以降低首付款健身房身房还可以降低首付款健还可以降低首付款健身房身房</p>
	                </a>
	            </li>
	            <li>
	            	<a href="conText.html">
	                    <h2>还可以降低首付款健身房还可以降低首付款健身房还可以降低首付款健身房333</h2>
	                    <p>还可以降低首付款健还可以降低首付款健身房还可以降低首付款健身房身房还可以降低首付款健还可以降低首付款健身房身房</p>
	                </a>
	            </li>
	            <li>
	            	<a href="conText.html">
	                    <h2>还可以降低首付款健身房还可以降低首付款健身房还可以降低首付款健身房333</h2>
	                    <p>还可以降低首付款健还可以降低首付款健身房还可以降低首付款健身房身房还可以降低首付款健还可以降低首付款健身房身房</p>
	                </a>
	            </li>
	            <li>
	            	<a href="conText.html">
	                    <h2>还可以降低首付款健身房还可以降低首付款健身房还可以降低首付款健身房333</h2>
	                    <p>还可以降低首付款健还可以降低首付款健身房还可以降低首付款健身房身房还可以降低首付款健还可以降低首付款健身房身房</p>
	                </a>
	            </li>
	            <li>
	            	<a href="conText.html">
	                    <h2>还可以降低首付款健身房还可以降低首付款健身房还可以降低首付款健身房333</h2>
	                    <p>还可以降低首付款健还可以降低首付款健身房还可以降低首付款健身房身房还可以降低首付款健还可以降低首付款健身房身房</p>
	                </a>
	            </li>
	            <li>
	            	<a href="conText.html">
	                    <h2>还可以降低首付款健身房还可以降低首付款健身房还可以降低首付款健身房333</h2>
	                    <p>还可以降低首付款健还可以降低首付款健身房还可以降低首付款健身房身房还可以降低首付款健还可以降低首付款健身房身房</p>
	                </a>
	            </li>
	        </ul>
	    </div>
	</div>
</template>
<script>
	export default {
	}
</script>
<style scoped>
	.mt40{
		margin-top:40px;
	}
</style>

39:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\Follow.vue
<template>
	<div class="content mt40">
	    <div class="newsList">
	    	<ul>
	            <li v-for="(item, index) in arrList">
	            	<a href="javascript:;">
	                    <h2>{{index+1}} .{{item.title}}</h2>
	                    <p>{{item.detail}}</p>
	                </a>
	            </li>
	            
	        </ul>
	    </div>
	</div>
</template>
<script>
	export default {
		data(){
			return {
				arrList:[]
			}
		},
		mounted(){
			this.fetchData()
		},
		methods:{
			fetchData(){
				var _this=this;
				this.$http.get('src/data/follow.data').then(function(res){
					//console.log( res.data);
					//setTimeout(function(){
						_this.arrList=res.data;
					//},1000);
				}).catch(function(err){
					console.log(err);
				});
			}
		}
	}
</script>
<style scoped>
	.mt40{
		margin-top:40px;
	}
</style>

40:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\Footer.vue
<template>
	<div class="foot-btn">
		<ul>
	    	<!-- <li class="home"><a href="index.html"></a></li>
	    		        <li class="write"><a href="javascript:;"></a></li>
	    		        <li class="my"><a href="mydoc.html"></a></li> -->
	    	<router-link class="home" to="/home" tag='li'>
	    		<a href="javascript:;"></a>
	    	</router-link>
	    	<router-link class="write" to='/follow' tag='li'>
	    		<a href="javascript:;"></a>
	    	</router-link>
	    	<router-link class="my" to="/user-info" tag='li'>
	    		<a href="javascript:;"></a>
	    	</router-link>
	    </ul>
	</div>
</template>

41:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\Home.vue
<template>
	<div class="content">
		<Slider></Slider>
	    <div class="newsList">
	    	<ul>
	            <li v-for="(item,index) in arrList">
	                <router-link :to="'/article/'+item.id">
	                	<h2>{{index+1}} . {{item.title}}</h2>
	                    <p>{{item.detail}}</p>
	                </router-link>
	            </li>
	        </ul>
	    </div>
	</div>
</template>
<script>
	import Slider from './Slider.vue'
	export default {
		data(){
			return {
				arrList:[]
			}
		},
		components:{
			Slider
		},
		mounted(){
			//获取数据
			this.fetchData();
		},
		methods:{
			fetchData(){
				var _this=this;
				this.$http.get('src/data/index.data').then(function(res){
					//console.log( res.data);
					//setTimeout(function(){
						_this.arrList=res.data;
					//},1000);
				}).catch(function(err){
					console.log(err);
				});
			}
		}
	}

</script>
<style scoped>
	@import '../assets/css/index.css';
</style>

42:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\loading\index.js
const LoadingComponent = require('./Loading.vue')
const loading = {
  install: function(Vue) {
    Vue.component('loading', LoadingComponent)
  }
}
module.exports = loading


43:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\loading\Loading.vue
<template>
    <div class="zns-loading">
    	<div class="zns-loading-inner">
	    	<div class="ball-spin-fade-loader">
		      <div></div>
		      <div></div>
		      <div></div>
		      <div></div>
		      <div></div>
		      <div></div>
		      <div></div>
		      <div></div>
		    </div>
	    </div>
    </div>
</template>
<style scoped>
	.zns-loading{
		position: fixed;
		z-index: 1000;
		width:100%;
		height:90px;
	}
	.zns-loading-inner{
		display:flex;
	    display: flex;
	    height: 100px;
	    align-items: center;
	    justify-content: center;
	}
	@-webkit-keyframes ball-spin-fade-loader {
	  50% {
	    opacity: 0.3;
	    -webkit-transform: scale(0.4);
	            transform: scale(0.4); }

	  100% {
	    opacity: 1;
	    -webkit-transform: scale(1);
	            transform: scale(1); } }

	@keyframes ball-spin-fade-loader {
	  50% {
	    opacity: 0.3;
	    -webkit-transform: scale(0.4);
	            transform: scale(0.4); }

	  100% {
	    opacity: 1;
	    -webkit-transform: scale(1);
	            transform: scale(1); } }

	.ball-spin-fade-loader {
	  position: relative; }
	  .ball-spin-fade-loader > div:nth-child(1) {
	    top: 25px;
	    left: 0;
	    -webkit-animation: ball-spin-fade-loader 1s 0s infinite linear;
	            animation: ball-spin-fade-loader 1s 0s infinite linear; }
	  .ball-spin-fade-loader > div:nth-child(2) {
	    top: 17.04545px;
	    left: 17.04545px;
	    -webkit-animation: ball-spin-fade-loader 1s 0.12s infinite linear;
	            animation: ball-spin-fade-loader 1s 0.12s infinite linear; }
	  .ball-spin-fade-loader > div:nth-child(3) {
	    top: 0;
	    left: 25px;
	    -webkit-animation: ball-spin-fade-loader 1s 0.24s infinite linear;
	            animation: ball-spin-fade-loader 1s 0.24s infinite linear; }
	  .ball-spin-fade-loader > div:nth-child(4) {
	    top: -17.04545px;
	    left: 17.04545px;
	    -webkit-animation: ball-spin-fade-loader 1s 0.36s infinite linear;
	            animation: ball-spin-fade-loader 1s 0.36s infinite linear; }
	  .ball-spin-fade-loader > div:nth-child(5) {
	    top: -25px;
	    left: 0;
	    -webkit-animation: ball-spin-fade-loader 1s 0.48s infinite linear;
	            animation: ball-spin-fade-loader 1s 0.48s infinite linear; }
	  .ball-spin-fade-loader > div:nth-child(6) {
	    top: -17.04545px;
	    left: -17.04545px;
	    -webkit-animation: ball-spin-fade-loader 1s 0.6s infinite linear;
	            animation: ball-spin-fade-loader 1s 0.6s infinite linear; }
	  .ball-spin-fade-loader > div:nth-child(7) {
	    top: 0;
	    left: -25px;
	    -webkit-animation: ball-spin-fade-loader 1s 0.72s infinite linear;
	            animation: ball-spin-fade-loader 1s 0.72s infinite linear; }
	  .ball-spin-fade-loader > div:nth-child(8) {
	    top: 17.04545px;
	    left: -17.04545px;
	    -webkit-animation: ball-spin-fade-loader 1s 0.84s infinite linear;
	            animation: ball-spin-fade-loader 1s 0.84s infinite linear; }
	  .ball-spin-fade-loader > div {
	    background-color: #5477b2;
	    width: 15px;
	    height: 15px;
	    border-radius: 100%;
	    margin: 2px;
	    -webkit-animation-fill-mode: both;
	            animation-fill-mode: both;
	    position: absolute; }
</style>

44:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\Nav.vue
<template>
	<div class="nav">
		<ul>
	    	<router-link to="/home" tag="li" active-class="active">
	    		<a href="javascript:;">首页</a>
	    	</router-link>
	    	<router-link to="/follow" tag="li" active-class="active">
	    		<a href="javascript:;">关注</a>
	    	</router-link>
	    	<router-link to="/column" tag="li" active-class="active">
	    		<a href="javascript:;">栏目</a>
	    	</router-link>
	    </ul>
	</div>
</template>
<script>
	export default{
		//name:'nav'
	}
</script>

45:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\Slider.vue
<template>
	<div class="banner">
        <ul class="clearfix">
            <li><img src="../assets/images/img_1.jpg" alt=""/>
            	<div class="text-box">
                	<h2>还可以降低首付款健身房11111</h2>
                    <p>刘德华11 / 文</p>
                </div>
            </li>
            <li><img src="../assets/images/img_2.jpg" alt=""/>
            	<div class="text-box">
                	<h2>还可以降低首付款健身房2222</h2>
                    <p>刘德华22 / 文</p>
                </div>
            </li>
            <li><img src="../assets/images/img_3.jpg" alt=""/>
            	<div class="text-box">
                	<h2>还可以降低首付款健身房333</h2>
                    <p>刘德华33 / 文</p>
                </div>
            </li>
            <li><img src="../assets/images/img_1.jpg" alt=""/>
            	<div class="text-box">
                	<h2>还可以降低首付款健身房11111</h2>
                    <p>刘德华11 / 文</p>
                </div>
            </li>
        </ul>
        <ol>
            <li class="active"></li>
            <li></li>
            <li></li>
            <li></li>
        </ol>
    </div>
</template>
<script>
	export default {
		mounted(){
			this.fnSlider();
		},
		watch:{
			// '$route':function(){
			// 	alert(1);
			// }
		},
		methods:{
			fnSlider(){
				$(function (){
					var mySwipe=new Swipe($('.banner')[0],{
						auto:2000,
						continuous:true,
						stopPropation:true,
						callback:function (index,element){
							$('.banner ol li').removeClass('active');
							$('.banner ol li').eq(index).addClass('active');
						}
					});
				});
			}
		}
	}
</script>

46:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\UserInfo.vue
<template>
	<div class="content">
		<div class="header">
	    	<h2><img src="../assets/img/headimg.png" alt=""/></h2>
	        <div class="user-box">
	        	<router-link to="/user-login">登录</router-link>
	        	<router-link to="/user-reg">注册</router-link>
	        </div>
	        <ul class="clear">
	        	<li>
	            	<span>0</span>
	                <p>关注</p>
	            </li>
	            <li>
	            	<span>0</span>
	                <p class="end">粉丝</p>
	            </li>
	        </ul>
	    </div>
	    <div class="docList">
	    	<ul>
	            <li class="gk-text">
	            	<i></i>
	                <p>公开博文</p>
	                <b></b>
	                <span>0</span>
	            </li>
	            <li class="mm-text">
	            	<i></i>
	                <p>秘密博文</p>
	                <b></b>
	                <span>0</span>
	            </li>
	            <li class="cg-text">
	            	<i></i>
	                <p>草稿箱</p>
	                <b></b>
	                <span>0</span>
	            </li>
	            <li class="sc-text">
	            	<i></i>
	                <p>收藏夹</p>
	                <b></b>
	                <span>0</span>
	            </li>
	            <li class="my_cz">
	            	<i></i>
	                <p>收藏夹</p>
	            </li>
	        </ul>
	    </div>
	</div>
</template>
<script>
	export default{
		// watch:{
		// 	$route(to){
		// 		//console.log(to.path);
		// 		if(to.path=='/user-info'){
		// 			//console.log(this.$store.state);
		// 			this.$store.dispatch('SHOW_HEAD_FAIL');
		// 		}
		// 	}
		// }
	}	
</script>
<style scoped>
	@import '../assets/css/mydoc.css';
</style>

47:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\UserLogin.vue
<template>
	<div class="content">
	    <p class="fhbtn"><a href="javascript:;" onclick="window.history.go(-1)"></a></p>
	    <h1></h1>
	    <div class="login-box">
	    	<p class="lsolid"></p>
	        <div class="login">
	        	<!-- <a href="javascript:;">登录</a><span></span>
	        	<a href="javascript:;">注册</a> -->
	        	<router-link to="/user-login">登录</router-link>
	        	<span></span>
	        	<router-link to="/user-reg">注册</router-link>
	        </div>
	        <p class="rsolid"></p>
	    </div>
	    <ul>
	        <li class="lifirst">
	        	<input type="text" value=""/>
	            <span>帐号</span>
	        </li>
	        <li>
	        	<input type="text" value=""/>
	            <span>密码</span>
	        </li>
	    </ul>
	    <div class="footbox">
	        <input type="button" value="登 录" class="login-btn"/>
	        <a href="javascript:;" class="tishi">忘记密码？</a>
	    </div>
	</div>
</template>
<style scoped>
	body{ background:#f2f4f5;}
	.content{max-width:6.4rem; margin:0 auto;}
	.content .fhbtn{ padding-top:0.27rem;}
	.content .fhbtn a{ display:block;width:0.23rem;height:0.25rem; background:url(../assets/img/history1.png) no-repeat 0 0; background-size:100%; margin-left:0.3rem;}
	.content h1{width:2.18rem;height:1.35rem; background:url(../assets/img/logo.png) no-repeat 0 0; background-size:100%; margin:0 auto; margin-top:1.22rem;}
	.content .login{width:2.0rem;height:0.38rem; margin:0 auto; margin-top:0.85rem;}
	.login a{width:0.97rem;height:0.38rem; font-size:0.35rem; line-height:0.38rem; float:left; color:#4c4f50; text-align:center;}
	.login span{ float:left;height:0.38rem; border-left:1px solid #4c4f50;}
	.content .login-box{ position:relative;}
	.content .login-box .lsolid{width:1.96rem;height:0.18rem; border-bottom:1px solid #4c4f50; position:absolute;top:0;left:0.1rem;}
	.content .login-box .rsolid{width:1.96rem;height:0.18rem; border-bottom:1px solid #4c4f50; position:absolute;top:0;right:0.1rem;}
	.content ul{width:5.78rem;height:1.92rem; border:1px solid #e5e7e8; background:#fff; margin:0 auto; margin-top:0.68rem;}
	.content ul li{height:0.95rem; position:relative;}
	.content ul li.lifirst{border-bottom:1px solid #e5e7e8;}
	.content ul li input{ padding-left:1.24rem;width:4.54rem;height:100%; font-size:0.4rem;}
	.content ul li span{width:1.23rem;height:0.49rem; position:absolute;top:0.26rem;left:0; border-right:1px solid #676868; color:#676868; font-size:0.25rem; line-height:0.49rem; text-align:center;}
	.content .footbox{width:4.65rem;height:0.65rem;margin:0 auto; }
	.content .login-btn{width:4.65rem;height:0.65rem; background:#4c4f50; color:#fff; text-align:center; line-height:0.65rem; border-radius:8px; display:block; margin-top:0.62rem; font-size:0.28rem;}
	.content .tishi{width:1.4rem; font-size:0.25rem; margin-top:0.28rem; display:block;}
</style>

48:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\components\UserReg.vue
<template>
	<div class="content">
	    <p class="fhbtn"><a href="javascript:;" onclick="window.history.go(-1)"></a></p>
	    <h1></h1>
	    <div class="login-box">
	    	<p class="lsolid"></p>
	        <div class="login">
	        	<router-link to="/user-login">登录</router-link>
	        	<span></span>
	        	<router-link to="/user-reg">注册</router-link>
	        </div>
	        <p class="rsolid"></p>
	    </div>
	    <ul>
	        <li class="lifirst">
	        	<input type="text" value=""/>
	            <span>帐号</span>
	        </li>
	        <li>
	        	<input type="text" value=""/>
	            <span>密码</span>
	        </li>
	    </ul>
	    <div class="footbox">
	        <input type="button" value="注 册" class="login-btn"/>
	        <a href="javascript:;" class="tishi">忘记密码？</a>
	    </div>
	</div>
</template>
<style scoped>
	body{ background:#f2f4f5;}
	.content{max-width:6.4rem; margin:0 auto;}
	.content .fhbtn{ padding-top:0.27rem;}
	.content .fhbtn a{ display:block;width:0.23rem;height:0.25rem; background:url(../assets/img/history1.png) no-repeat 0 0; background-size:100%; margin-left:0.3rem;}
	.content h1{width:2.18rem;height:1.35rem; background:url(../assets/img/logo.png) no-repeat 0 0; background-size:100%; margin:0 auto; margin-top:1.22rem;}
	.content .login{width:2.0rem;height:0.38rem; margin:0 auto; margin-top:0.85rem;}
	.login a{width:0.97rem;height:0.38rem; font-size:0.35rem; line-height:0.38rem; float:left; color:#4c4f50; text-align:center;}
	.login span{ float:left;height:0.38rem; border-left:1px solid #4c4f50;}
	.content .login-box{ position:relative;}
	.content .login-box .lsolid{width:1.96rem;height:0.18rem; border-bottom:1px solid #4c4f50; position:absolute;top:0;left:0.1rem;}
	.content .login-box .rsolid{width:1.96rem;height:0.18rem; border-bottom:1px solid #4c4f50; position:absolute;top:0;right:0.1rem;}
	.content ul{width:5.78rem;height:1.92rem; border:1px solid #e5e7e8; background:#fff; margin:0 auto; margin-top:0.68rem;}
	.content ul li{height:0.95rem; position:relative;}
	.content ul li.lifirst{border-bottom:1px solid #e5e7e8;}
	.content ul li input{ padding-left:1.24rem;width:4.54rem;height:100%; font-size:0.4rem;}
	.content ul li span{width:1.23rem;height:0.49rem; position:absolute;top:0.26rem;left:0; border-right:1px solid #676868; color:#676868; font-size:0.25rem; line-height:0.49rem; text-align:center;}
	.content .footbox{width:4.65rem;height:0.65rem;margin:0 auto; }
	.content .login-btn{width:4.65rem;height:0.65rem; background:#4c4f50; color:#fff; text-align:center; line-height:0.65rem; border-radius:8px; display:block; margin-top:0.62rem; font-size:0.28rem;}
	.content .tishi{width:1.4rem; font-size:0.25rem; margin-top:0.28rem; display:block;}
</style>

49:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\filters\index.js
import {normalTime} from './timeFormat';

module.exports={
	normalTime
};

50:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\filters\timeFormat.js

export const normalTime=(time)=>{
	if(time){
		var oDate=new Date();
		oDate.setTime(time);

		var y=oDate.getFullYear();
		var m=oDate.getMonth()+1;
		var d=oDate.getDate();

		var h=oDate.getHours();
		var m=oDate.getMinutes();
		var s=oDate.getSeconds();

		return y+'-'+m+'-'+d+' '+h+':'+m+':'+s;
	}
}

51:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\main.js
import Vue from 'vue'
import App from './App.vue'
import VueRouter from 'vue-router'
import axios from 'axios'
import Loading from './components/Loading'

import stores from './store/store'
import routes from './routeConfig.js'

import filters from './filters'

Object.keys(filters).forEach(key => Vue.filter(key, filters[key]))

Vue.use(VueRouter);
Vue.use(Loading);

require('./assets/css/base.css'); //引入全局的base文件

const router=new VueRouter({
	mode: 'history', //切换路径模式，变成history模式
  scrollBehavior: () => ({ y: 0 }), // 滚动条滚动的行为，不加这个默认就会记忆原来滚动条的位置
	routes
});

//axios的一些配置，比如发送请求显示loading，请求回来loading消失之类的
//
axios.interceptors.request.use(function (config) {  //配置发送请求的信息
  stores.dispatch('showLoading')  
  return config;
}, function (error) {
  return Promise.reject(error);
});

axios.interceptors.response.use(function (response) { //配置请求回来的信息
  stores.dispatch('hideLoading')
  return response;
}, function (error) {

  return Promise.reject(error);
});

/*axios.defaults.baseURL = (process.env.NODE_ENV !=='production' ? config.dev.httpUrl:config.build.httpUrl);
axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';*/
//axios.defaults.baseURL='http://localhost:8082/';
Vue.prototype.$http = axios  //其他页面在使用axios的时候直接  this.$http就可以了

new Vue({
  el: '#app',
  router,
  store:stores,
  render: h => h(App)
})

52:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\routeConfig.js
//import Vue from 'vue'


import Home from './components/Home.vue'
import Follow from './components/Follow.vue'
import Column from './components/Column.vue'
import UserInfo from './components/UserInfo.vue'
import UserLogin from './components/UserLogin.vue'
import UserReg from './components/UserReg.vue'
import Article from './components/Article.vue'

export default [
  {
    path:'/home',
    component:Home
  },
  {
    path:'/follow',
    component:Follow
  },
  {
    path:'/column',
    component:Column
  },
  {
    path:'/user-info',
    component:UserInfo
  },
  {
    path:'/user-login',
    component:UserLogin
  },
  {
    path:'/user-reg',
    component:UserReg
  },
  {
    path:'/article/:id',
    component:Article,
    /*children:[
      {
        path:'/:id',
        component:Article
      }
    ]*/
  },
  { 
    path: '/', 
    redirect: '/home' 
  },
  { 
    path: '*', 
    redirect: '/home' 
  }
];

/*const router={
	mode: 'history',
  scrollBehavior: () => ({ y: 0 }),
	routes:[
		{
			path:'/home',
			component:Home
		},
    {
      path:'/follow',
      component:Follow
    },
    {
      path:'/column',
      component:Column
    },
		{ 
      path: '/', 
      redirect: '/home' 
    }
	]
};*/

//export default new VueRouter(router);


53:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\store\actions.js
//import 数据 from ''	这里面可以获取数据
import * as types from './type'

export default{

	/*头部信息*/
	SHOW_HEAD_SUCC:({commit})=>{
		commit(types.HEAD_SHOW_SUCCESS);
	},
	SHOW_HEAD_FAIL:({commit})=>{
		commit(types.HEAD_SHOW_FAIL);
	},
	/*loading*/
	hideLoading:({commit})=>{
		commit(types.HIDE_LOADING)
	},
	showLoading:({commit})=>{
		commit(types.SHOW_LOADING)
	},
	/*底部条*/
	hideFooter:({commit})=>{
		commit(types.FOOTER_HIDE);
	},
	showFooter:({commit})=>{
		commit(types.FOOTER_SHOW)
	}
}

54:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\store\mutations.js
import {
	HEAD_SHOW_SUCCESS,
	HEAD_SHOW_FAIL,
	HIDE_LOADING,
	SHOW_LOADING,
	FOOTER_HIDE,
	FOOTER_SHOW
} from './type'

const state={
	headShow:true,
	loading:false,
	footerShow:true
};

const mutations={
	/*头部*/
	[HEAD_SHOW_SUCCESS](state){
		state.headShow=true;
	},
	[HEAD_SHOW_FAIL](state){
		state.headShow=false;
		//console.log(state.headShow);
	},
	/*loading*/
	[HIDE_LOADING](state){
		state.loading=false;
	},
	[SHOW_LOADING](state){
		state.loading=true;
	},
	/*footer*/
	[FOOTER_HIDE](state){
		state.footerShow=false;
	},
	[FOOTER_SHOW](state){
		state.footerShow=true;
	}
};

const getters={
	headShow(state){
		return state.headShow;
	},
	loading(state){
		return state.loading;
	},
	footerShow(state){
		return state.footerShow;
	}
};

export default{
	state,
	mutations,
	getters
}

55:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\store\store.js
import Vue from 'vue'
import Vuex from 'vuex'
import mutations from './mutations'
import actions from './actions'

Vue.use(Vuex);


export default new Vuex.Store({
	modules:{
		mutations
	},
	actions
});


56:F:\git\nodejs\vue\vuestep\2019422\vue-news\src\store\type.js
export const HEAD_SHOW_SUCCESS='HEAD_SHOW_SUCCESS';
export const HEAD_SHOW_FAIL='HEAD_SHOW_FAIL';

export const HIDE_LOADING='HIDE_LOADING';
export const SHOW_LOADING='SHOW_LOADING';

export const FOOTER_SHOW='FOOTER_SHOW';
export const FOOTER_HIDE='FOOTER_HIDE'

57:F:\git\nodejs\vue\vuestep\2019422\vue-news\webpack.config.js
var path = require('path')
var webpack = require('webpack')

module.exports = {
  entry: './src/main.js',
  output: {
    path: path.resolve(__dirname, './dist'),
    publicPath: '/dist/',
    filename: 'build.js'
  },
  module: {
    rules: [{
      test: /\.vue$/,
      loader: 'vue-loader',
      options: {
        // vue-loader options go here
      }
    }, {
      test: /\.js$/,
      loader: 'babel-loader',
      exclude: /node_modules/
    }, {
      test: /\.css$/,
      loader: 'style-loader!css-loader'
    }, {
      test: /\.(png|jpg|gif|svg)$/,
      loader: 'file-loader',
      options: {
        name: '[name].[ext]?[hash]'
      }
    }]
  },
  resolve: {
    alias: {
      'vue$': 'vue/dist/vue.common.js'
    }
  },
  devServer: {
    historyApiFallback: true,
    noInfo: true
  },
  devtool: '#eval-source-map'
}

if (process.env.NODE_ENV === 'production') {
  module.exports.devtool = '#source-map'
    // http://vue-loader.vuejs.org/en/workflow/production.html
  module.exports.plugins = (module.exports.plugins || []).concat([
    new webpack.DefinePlugin({
      'process.env': {
        NODE_ENV: '"production"'
      }
    }),
    new webpack.optimize.UglifyJsPlugin({
      sourceMap: true,
      compress: {
        warnings: false
      }
    }),
    new webpack.LoaderOptionsPlugin({
      minimize: true
    })
  ])
}

58:F:\git\nodejs\vue\vuestep\2019422\lecture3\slot.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa>
			<ul>
				<li>1111</li>
				<li>2222</li>
				<li>3333</li>
			</ul>
		</aaa>
	</div>

	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					template:'<h1>xxxx</h1>'
				}
			}
		});

	</script>
</body>
</html>

59:F:\git\nodejs\vue\vuestep\2019422\lecture3\slot2.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa>
			<ul>
				<li>1111</li>
				<li>2222</li>
				<li>3333</li>
			</ul>
		</aaa>
		<hr>
		<aaa>
		</aaa>
	</div>
	<template id="aaa">
		<h1>xxxx</h1>
		<slot>这是默认的情况</slot>
		<p>welcome vue</p>
	</template>

	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					template:'#aaa'
				}
			}
		});

	</script>
</body>
</html>

60:F:\git\nodejs\vue\vuestep\2019422\lecture3\slot3.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa>
			<ul slot="ul-slot">
				<li>1111</li>
				<li>2222</li>
				<li>3333</li>
			</ul>
			<ol slot="ol-slot">
				<li>111</li>
				<li>222</li>
				<li>333</li>
			</ol>
		</aaa>
		<hr>
		<aaa>
		</aaa>
	</div>
	<template id="aaa">
		<h1>xxxx</h1>
		<slot name="ol-slot">这是默认的情况</slot>
		<p>welcome vue</p>
		<slot name="ul-slot">这是默认的情况2</slot>
	</template>

	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					template:'#aaa'
				}
			}
		});

	</script>
</body>
</html>

61:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue-loader-demo\App.vue
<template>
	<h1>welcome Vue</h1>
	<h2 @click="change">{{msg}}</h2>
	<my-menu></my-menu>
</template>
<script>
	import Menu from './components/Menu.vue'

	export default{
		data(){
			return {
				msg:'welcome Vue ^_^'
			}
		},
		methods:{
			change(){
				this.msg='wahaha'
			}
		},
		components:{
			'my-menu':Menu
		}	
	}
</script>
<style>
	body{
		background: #ccc
	}
</style>

62:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue-loader-demo\components\Menu.vue
<template>
	<ul>
		<li>111</li>
		<li>111</li>
		<li>111</li>
	</ul>
</template>
<script>
	
</script>

63:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue-loader-demo\index.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<body>
	<app></app>
	<script src="build.js"></script>
</body>
</html>

64:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue-loader-demo\main.js
import Vue from 'vue'
import App from './App.vue'

new Vue({
	el:'body',
	components:{
		app:App
	}
});


65:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue-loader-demo\webpack.config.js
module.exports={
	entry:'./main.js',

	output:{
		path:__dirname,
		filename:'build.js'
	},

	module:{
		loaders:[
			{test:/\.vue$/, loader:'vue'},
			{test:/\.js$/, loader:'babel', exclude:/node_modules/}
		]
	},
	babel:{
		presets:['es2015'],
		plugins:['transform-runtime']
	}
};

66:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue动态组件.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<input type="button" @click="a='aaa'" value="aaa组件">
		<input type="button" @click="a='bbb'" value="bbb组件">
		<component :is="a"></component>
	</div>

	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					template:'<h2>我是aaa组件</h2>'
				},
				'bbb':{
					template:'<h2>我是bbb组件</h2>'
				}
			}
		});

	</script>
</body>
</html>

67:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue动画.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
		#div1{
			width:100px;
			height:100px;
			background: red;
		}

		.fade-transition{
			transition: 1s all ease;	
		}
		.fade-enter{
			opacity: 0;
		}
		.fade-leave{
			opacity: 0;
			transform: translateX(200px);
		}
	</style>
</head>
<body>
	<div id="box">
		<input type="button" value="按钮" @click="toggle">
		<div id="div1" v-show="bSign" transition="fade"></div>
	</div>

	<script>
		new Vue({
			el:'#box',
			data:{
				bSign:true
			},
			methods:{
				/*toggle:function(){
					alert(1);
				}*/
				toggle(){
					this.bSign=!this.bSign;
				}
			}
		});
	</script>
</body>
</html>

68:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue动画2.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<link rel="stylesheet" href="bower_components/animate.css/animate.css">
	<style>
		#box{
			width:400px;
			margin: 0 auto;
		}
		#div1{
			width:100px;
			height:100px;
			background: red;
		}
	</style>
</head>
<body>
	<div id="box">
		<input type="button" value="按钮" @click="toggle">
		<div id="div1" class="animated" v-show="bSign" transition="bounce"></div>
	</div>

	<script>
		new Vue({
			el:'#box',
			data:{
				bSign:true
			},
			methods:{
				toggle(){
					this.bSign=!this.bSign;
				}
			},
			transitions:{ //定义所有动画名称
				bounce:{
					enterClass:'zoomInLeft',
					leaveClass:'zoomOutRight'
				}
			}
		});
	</script>
</body>
</html>

69:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue父子组件.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa>
		</aaa>
	</div>

	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					template:'<h2>我是aaa组件</h2><bbb></bbb>',
					components:{
						'bbb':{
							template:'<h3>我是bbb组件</h3>'
						}
					}
				}
			}
		});

	</script>
</body>
</html>

70:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue父子组件2.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa>
		</aaa>
	</div>

	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					data(){
						return {
							msg:'我是父组件的数据'
						}
					},
					template:'<h2>我是aaa组件</h2><bbb></bbb>',
					components:{
						'bbb':{
							template:'<h3>我是bbb组件->{{msg}}</h3>'
						}
					}
				}
			}
		});

	</script>
</body>
</html>

71:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue父子组件3.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa>
		</aaa>
	</div>

	<template id="aaa">
		<h1>11111</h1>
		<bbb :mmm="msg2"></bbb>
	</template>
	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					data(){
						return {
							msg2:'我是父组件的数据'
						}
					},
					template:'#aaa',
					components:{
						'bbb':{
							props:['mmm'],
							template:'<h3>我是bbb组件->{{mmm}}</h3>'
						}
					}
				}
			}
		});

	</script>
</body>
</html>

72:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue父子组件4.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa>
		</aaa>
	</div>

	<template id="aaa">
		<h1>11111</h1>
		<bbb :mmm="msg2" :my-msg="msg"></bbb>
	</template>
	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					data(){
						return {
							msg:111,
							msg2:'我是父组件的数据'
						}
					},
					template:'#aaa',
					components:{
						'bbb':{
							props:['mmm','myMsg'],
							template:'<h3>我是bbb组件->{{mmm}} <br> {{myMsg}}</h3>'
						}
					}
				}
			}
		});

	</script>
</body>
</html>

73:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue父子组件5.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa>
		</aaa>
	</div>

	<template id="aaa">
		<h1>11111</h1>
		<bbb :mmm="msg2" :my-msg="msg"></bbb>
	</template>
	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					data(){
						return {
							msg:111,
							msg2:'我是父组件的数据'
						}
					},
					template:'#aaa',
					components:{
						'bbb':{
							props:{
								'm':String,
								'myMsg':Number
							},
							template:'<h3>我是bbb组件->{{mmm}} <br> {{myMsg}}</h3>'
						}
					}
				}
			}
		});

	</script>
</body>
</html>

74:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue父子组件6.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa>
		</aaa>
	</div>

	<template id="aaa">
		<span>我是父级 -> {{msg}}</span>
		<bbb @child-msg="get"></bbb>
	</template>
	<template id="bbb">
		<h3>子组件-</h3>
		<input type="button" value="send" @click="send">
	</template>
	<script>
		var vm=new Vue({
			el:'#box',
			data:{
				a:'aaa'
			},
			components:{
				'aaa':{
					data(){
						return {
							msg:111,
							msg2:'我是父组件的数据'
						}
					},
					template:'#aaa',
					methods:{
						get(msg){
							// alert(msg);
							this.msg=msg;
						}
					},
					components:{
						'bbb':{
							data(){
								return {
									a:'我是子组件的数据'
								}
							},
							template:'#bbb',
							methods:{
								send(){
									this.$emit('child-msg',this.a);
								}
							}
						}
					}
				}
			}
		});

	</script>
</body>
</html>

75:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件-其他.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa></aaa>
	</div>

	<script>
		var Aaa=Vue.extend({
			data:{
				msg:'我是笔筒^_^'
			},
			template:'<h3>{{msg}}</h3>'
		});

		Vue.component('aaa',Aaa);


		var vm=new Vue({
			el:'#box',
			data:{
				bSign:true
			}
		});

	</script>
</body>
</html>

76:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件-其他2.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa></aaa>
	</div>

	<script>
		var Aaa=Vue.extend({
			data(){
				return {
					msg:'我是标题^^'
				};
			},
			template:'<h3>{{msg}}</h3>'
		});

		Vue.component('aaa',Aaa);


		var vm=new Vue({
			el:'#box',
			data:{
				bSign:true
			}
		});

	</script>
</body>
</html>

77:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件-其他3.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa></aaa>
	</div>

	<script>
		var Aaa=Vue.extend({
			data(){
				return {
					msg:'我是标题^^'
				};
			},
			methods:{
				change(){
					this.msg='changed'
				}
			},
			template:'<h3 @click="change">{{msg}}</h3>'
		});

		Vue.component('aaa',Aaa);


		var vm=new Vue({
			el:'#box',
			data:{
				bSign:true
			}
		});

	</script>
</body>
</html>

78:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件-另一个编写方式.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<my-aaa></my-aaa>
	</div>

	<script>
		Vue.component('my-aaa',{
			template:'<strong>好</strong>'
		});

		var vm=new Vue({
			el:'#box'
		});

	</script>
</body>
</html>

79:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件-另一个编写方式2.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<my-aaa></my-aaa>
	</div>

	<script>
		var vm=new Vue({
			el:'#box',
			components:{
				'my-aaa':{
					data(){
						return {
							msg:'welcome vue'
						}
					},
					methods:{
						change(){
							this.msg='changed';
						}
					},
					template:'<h2 @click="change">标题2->{{msg}}</h2>'
				}
			}
		});

	</script>
</body>
</html>

80:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件-模板.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<my-aaa></my-aaa>
	</div>

	<script type="x-template" id="aaa">
		<h2 @click="change">标题2->{{msg}}</h2>
		<ul>
			<li>1111</li>
			<li>222</li>
			<li>3333</li>
			<li>1111</li>
		</ul>
	</script>

	<script>
		var vm=new Vue({
			el:'#box',
			components:{
				'my-aaa':{
					data(){
						return {
							msg:'welcome vue'
						}
					},
					methods:{
						change(){
							this.msg='changed';
						}
					},
					template:'#aaa'
				}
			}
		});

	</script>
</body>
</html>

81:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件-模板2.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<my-aaa></my-aaa>
	</div>

	<template id="aaa">
		<h1>标题1</h1>
		<ul>
			<li v-for="val in arr">
				{{val}}
			</li>
		</ul>
	</template>

	<script>
		var vm=new Vue({
			el:'#box',
			components:{
				'my-aaa':{
					data(){
						return {
							msg:'welcome vue',
							arr:['apple','banana','orange']
						}
					},
					methods:{
						change(){
							this.msg='changed';
						}
					},
					template:'#aaa'
				}
			}
		});

	</script>
</body>
</html>

82:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<!-- <aaa></aaa> -->
	</div>

	<script>
		var Aaa=Vue.extend({
			template:'<h3>我是标题3</h3>'
		});

		var a=new Aaa();
		console.log(a);


		var vm=new Vue({
			el:'#box',
			data:{
				bSign:true
			}
		});

	</script>
</body>
</html>

83:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件2.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa></aaa>
	</div>

	<script>
		var Aaa=Vue.extend({
			template:'<h3>我是标题3</h3>'
		});

		Vue.component('aaa',Aaa);


		var vm=new Vue({
			el:'#box',
			data:{
				bSign:true
			}
		});

	</script>
</body>
</html>

84:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件3.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<aaa></aaa>
	</div>

	<script>
		var Aaa=Vue.extend({
			template:'<h3>{{msg}}</h3>',
			data(){
				return {
					msg:'ddddd'
				}
			}
		});


		var vm=new Vue({
			el:'#box',
			data:{
				bSign:true
			},
			components:{ //局部组件
				aaa:Aaa
			}
		});

	</script>
</body>
</html>

85:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue组件4.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<my-aaa></my-aaa>
	</div>

	<script>
		var Aaa=Vue.extend({
			template:'<h3>{{msg}}</h3>',
			data(){
				return {
					msg:'ddddd'
				}
			}
		});


		var vm=new Vue({
			el:'#box',
			data:{
				bSign:true
			},
			components:{ //局部组件
				'my-aaa':Aaa
			}
		});

	</script>
</body>
</html>

86:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue路由-多层.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<script src="bower_components/vue-router/dist/vue-router.js"></script>
	<style>
		.v-link-active{
			font-size: 20px;
			color: #f60;
		}
	</style>
</head>
<body>
	<div id="box">
		<ul>
			<li>
				<a v-link="{path:'/home'}">主页</a>
			</li>
			<li>
				<a v-link="{path:'/news'}">新闻</a>
			</li>
		</ul>
		<div>
			<router-view></router-view>
		</div>	
	</div>

	<template id="home">
		<h3>我是主页</h3>
		<div>
			<a v-link="{path:'/home/login'}">登录</a>
			<a v-link="{path:'/home/reg'}">注册</a>
		</div>
		<div>
			<router-view></router-view>
		</div>
	</template>
	<template id="news">
		<h3>我是新闻</h3>
	</template>
	<script>
		//1. 准备一个根组件
		var App=Vue.extend();

		//2. Home News组件都准备
		var Home=Vue.extend({
			template:'#home'
		});

		var News=Vue.extend({
			template:'#news'
		});

		//3. 准备路由
		var router=new VueRouter();

		//4. 关联
		router.map({
			'home':{
				component:Home,
				subRoutes:{
					'login':{
						component:{
							template:'<strong>我是登录信息</strong>'
						}
					},
					'reg':{
						component:{
							template:'<strong>我是注册信息</strong>'
						}
					}
				}
			},
			'news':{
				component:News
			}
		});

		//5. 启动路由
		router.start(App,'#box');

		//6. 跳转
		router.redirect({
			'/':'home'
		});
	</script>
</body>
</html>

87:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue路由-多层2.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<script src="bower_components/vue-router/dist/vue-router.js"></script>
	<style>
		.v-link-active{
			font-size: 20px;
			color: #f60;
		}
	</style>
</head>
<body>
	<div id="box">
		<ul>
			<li>
				<a v-link="{path:'/home'}">主页</a>
			</li>
			<li>
				<a v-link="{path:'/news'}">新闻</a>
			</li>
		</ul>
		<div>
			<router-view></router-view>
		</div>	
	</div>

	<template id="home">
		<h3>我是主页</h3>
		<div>
			<a v-link="{path:'/home/login'}">登录</a>
			<a v-link="{path:'/home/reg'}">注册</a>
		</div>
		<div>
			<router-view></router-view>
		</div>
	</template>
	<template id="news">
		<h3>我是新闻</h3>
		<div>
			<a v-link="{path:'/news/detail/001'}">新闻001</a>
			<a v-link="{path:'/news/detail/002'}">新闻002</a>
		</div>
		<router-view></router-view>
	</template>
	<template id="detail">
		{{$route.params | json}}
	</template>
	<script>
		//1. 准备一个根组件
		var App=Vue.extend();

		//2. Home News组件都准备
		var Home=Vue.extend({
			template:'#home'
		});

		var News=Vue.extend({
			template:'#news'
		});

		var Detail=Vue.extend({
			template:'#detail'
		});

		//3. 准备路由
		var router=new VueRouter();

		//4. 关联
		router.map({
			'home':{
				component:Home,
				subRoutes:{
					'login':{
						component:{
							template:'<strong>我是登录信息</strong>'
						}
					},
					'reg':{
						component:{
							template:'<strong>我是注册信息</strong>'
						}
					}
				}
			},
			'news':{
				component:News,
				subRoutes:{
					'/detail/:id':{
						component:Detail
					}
				}
			}
		});

		//5. 启动路由
		router.start(App,'#box');

		//6. 跳转
		router.redirect({
			'/':'home'
		});
	</script>
</body>
</html>

88:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue路由-多层3.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<script src="bower_components/vue-router/dist/vue-router.js"></script>
	<style>
		.v-link-active{
			font-size: 20px;
			color: #f60;
		}
	</style>
</head>
<body>
	<div id="box">
		<ul>
			<li>
				<a v-link="{path:'/home'}">主页</a>
			</li>
			<li>
				<a v-link="{path:'/news'}">新闻</a>
			</li>
		</ul>
		<div>
			<router-view></router-view>
		</div>	
	</div>

	<template id="home">
		<h3>我是主页</h3>
		<div>
			<a v-link="{path:'/home/login'}">登录</a>
			<a v-link="{path:'/home/reg'}">注册</a>
		</div>
		<div>
			<router-view></router-view>
		</div>
	</template>
	<template id="news">
		<h3>我是新闻</h3>
		<div>
			<a v-link="{path:'/news/detail/001'}">新闻001</a>
			<a v-link="{path:'/news/detail/002'}">新闻002</a>
		</div>
		<router-view></router-view>
	</template>
	<template id="detail">
		{{$route.params | json}}
		<br>
		{{$route.path}}
		<br>
		{{$route.query | json}}
	</template>
	<script>
		//1. 准备一个根组件
		var App=Vue.extend();

		//2. Home News组件都准备
		var Home=Vue.extend({
			template:'#home'
		});

		var News=Vue.extend({
			template:'#news'
		});

		var Detail=Vue.extend({
			template:'#detail'
		});

		//3. 准备路由
		var router=new VueRouter();

		//4. 关联
		router.map({
			'home':{
				component:Home,
				subRoutes:{
					'login':{
						component:{
							template:'<strong>我是登录信息</strong>'
						}
					},
					'reg':{
						component:{
							template:'<strong>我是注册信息</strong>'
						}
					}
				}
			},
			'news':{
				component:News,
				subRoutes:{
					'/detail/:id':{
						component:Detail
					}
				}
			}
		});

		//5. 启动路由
		router.start(App,'#box');

		//6. 跳转
		router.redirect({
			'/':'home'
		});
	</script>
</body>
</html>

89:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue路由-多层4.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<script src="bower_components/vue-router/dist/vue-router.js"></script>
	<style>
		.v-link-active{
			font-size: 20px;
			color: #f60;
		}
	</style>
</head>
<body>
	<div id="box">
		<ul>
			<li>
				<a v-link="{path:'/home'}">主页</a>
			</li>
			<li>
				<a v-link="{path:'/news'}">新闻</a>
			</li>
		</ul>
		<div>
			<router-view></router-view>
		</div>	
	</div>

	<template id="home">
		<h3>我是主页</h3>
		<div>
			<a v-link="{path:'/home/login/zns'}">登录</a>
			<a v-link="{path:'/home/reg/strive'}">注册</a>
		</div>
		<div>
			<router-view></router-view>
		</div>
	</template>
	<template id="news">
		<h3>我是新闻</h3>
		<div>
			<a v-link="{path:'/news/detail/001'}">新闻001</a>
			<a v-link="{path:'/news/detail/002'}">新闻002</a>
		</div>
		<router-view></router-view>
	</template>
	<template id="detail">
		{{$route.params | json}}
		<br>
		{{$route.path}}
		<br>
		{{$route.query | json}}
	</template>
	<script>
		//1. 准备一个根组件
		var App=Vue.extend();

		//2. Home News组件都准备
		var Home=Vue.extend({
			template:'#home'
		});

		var News=Vue.extend({
			template:'#news'
		});

		var Detail=Vue.extend({
			template:'#detail'
		});

		//3. 准备路由
		var router=new VueRouter();

		//4. 关联
		router.map({
			'home':{
				component:Home,
				subRoutes:{
					'login/:name':{
						component:{
							template:'<strong>我是登录信息 {{$route.params | json}}</strong>'
						}
					},
					'reg':{
						component:{
							template:'<strong>我是注册信息</strong>'
						}
					}
				}
			},
			'news':{
				component:News,
				subRoutes:{
					'/detail/:id':{
						component:Detail
					}
				}
			}
		});

		//5. 启动路由
		router.start(App,'#box');

		//6. 跳转
		router.redirect({
			'/':'home'
		});
	</script>
</body>
</html>

90:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue路由.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<script src="bower_components/vue-router/dist/vue-router.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<ul>
			<li>
				<a v-link="{path:'/home'}">主页</a>
			</li>
			<li>
				<a v-link="{path:'/news'}">新闻</a>
			</li>
		</ul>
		<div>
			<router-view></router-view>
		</div>	
	</div>

	<script>
		//1. 准备一个根组件
		var App=Vue.extend();

		//2. Home News组件都准备
		var Home=Vue.extend({
			template:'<h3>我是主页</h3>'
		});

		var News=Vue.extend({
			template:'<h3>我是新闻</h3>'
		});

		//3. 准备路由
		var router=new VueRouter();

		//4. 关联
		router.map({
			'home':{
				component:Home
			},
			'news':{
				component:News
			}
		});

		//5. 启动路由
		router.start(App,'#box');
	</script>
</body>
</html>

91:F:\git\nodejs\vue\vuestep\2019422\lecture3\vue路由2.html
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="bower_components/vue/dist/vue.js"></script>
	<script src="bower_components/vue-router/dist/vue-router.js"></script>
	<style>
	</style>
</head>
<body>
	<div id="box">
		<ul>
			<li>
				<a v-link="{path:'/home'}">主页</a>
			</li>
			<li>
				<a v-link="{path:'/news'}">新闻</a>
			</li>
		</ul>
		<div>
			<router-view></router-view>
		</div>	
	</div>

	<script>
		//1. 准备一个根组件
		var App=Vue.extend();

		//2. Home News组件都准备
		var Home=Vue.extend({
			template:'<h3>我是主页</h3>'
		});

		var News=Vue.extend({
			template:'<h3>我是新闻</h3>'
		});

		//3. 准备路由
		var router=new VueRouter();

		//4. 关联
		router.map({
			'home':{
				component:Home
			},
			'news':{
				component:News
			}
		});

		//5. 启动路由
		router.start(App,'#box');

		//6. 跳转
		router.redirect({
			'/':'/home'
		});
	</script>
</body>
</html>
